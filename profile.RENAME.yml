# ------------ REQUIRED ---------------

# This section provides the bootstrap service with information to create
# a Cloudbreak instance on your specified Hosting Provider

# The instructions on setting up CLoudbreak role permissions for AWS are in 
# https://docs.hortonworks.com/HDPDocuments/Cloudbreak/Cloudbreak-2.7.1/content/aws-quick/index.html#create-cloudbreak-credential

# NOTE that the indentiation is deliberate to construct a dictionary

platform:
    provider: EC2
    key: CHANGEME
    secret: CHANGEME
    region: eu-west-2


# Please set a unique Namespace for yourself, your initials followed by a - are fine
namespace: user-


# Name to be looked for in the list of SSH Keys at your Platform provider.
# If a key is uploaded, it will be created under this name.
sshkey_name: CHANGEME


# Public key information for your SSH key. If the key is already loaded this is
# not necessary, however if you are skipping around Platform regions, then having
# it available to set up your key is highly convenient
sshkey_pub: ssh-rsa CHANGEME


# Private key path to your SSH key. This is necessary if you want to init
# services using Director, or do remote SSH work to K8s infrastructure, etc.
ssh_key_priv: | 
  -----BEGIN RSA PRIVATE KEY-----
  ...
  -----END RSA PRIVATE KEY-----


# ------------ DEFAULTS ---------------
profilever: 3
# URIs for additional resources to be loaded and processed by the orchestrator.
# Loc's can be either local or github
# URI should point to the folder root of the resources
# NOTE that this is a list of entries, prefixed by -, e.g.
#- loc: local
#  uri: resources/v2
resources:

# It is good practice to tag your services in order to distinguish projects
# and users and environments
# Empty tags will be autopopulated with useful defaults
tags:
  deployer: dchaffelson
  deploytool: whoville
  service: whovilleephemeralcluster
  businessunit: se


# The base name of your objectsore bucket if using objectstore definitions, 
# Cloudbreak will construct the rest of the URI from it
# Your infraarn will be reused to access it
bucket: whoville


# If globalpurge is true, the orchestrator will recreate anything it finds in 
# the namespace every time it is run. Useful for doing full tests or if you 
# have made major changes and want to validate from a fresh Cloudbreak instance
globalpurge: false

# Cloudbreak insists on a user login in email format, it is a convenient
# convention to simply append @example.com to your typical Ambari login
email: admin@example.com

# Login used for all other services used, such as Ambari, Ldap, Kerberos etc.
username: admin

# Password used for all services requiring such. If not set one will be generated.
password: admin-password1

# Masterkey used for all services requiring such. 
#  If not set one will be generated and stored in the cache.
masterkey: 

# If loading resources from Github, then your username is required just in
# case the repo is private
githubuser:

# Access token for your Github account, if githubuser is set
# https://blog.github.com/2013-05-16-personal-api-tokens/
githubtoken:
