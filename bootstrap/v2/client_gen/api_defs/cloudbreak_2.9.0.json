{
  "swagger" : "2.0",
  "info" : {
    "description" : "Cloudbreak is a powerful left surf that breaks over a coral reef, a mile off southwest the island of Tavarua, Fiji.\nCloudbreak is a cloud agnostic Hadoop as a Service API. Abstracts the provisioning and ease management and monitoring of on-demand clusters.\nSequenceIQ's Cloudbreak is a RESTful application development platform with the goal of helping developers to build solutions for deploying Hadoop YARN clusters in different environments.\nOnce it is deployed in your favourite servlet container it exposes a REST API allowing to span up Hadoop clusters of arbitary sizes and cloud providers. Provisioning Hadoop has never been easier.\nCloudbreak is built on the foundation of cloud providers API (Amazon AWS, Microsoft Azure, Google Cloud Platform, Openstack), Apache Ambari, Docker lightweight containers, Swarm and Consul.\nFor further product documentation follow the link: <a href=\"http://hortonworks.com/apache/cloudbreak/\">http://hortonworks.com/apache/cloudbreak/</a>",
    "version" : "2.9.0",
    "title" : "Cloudbreak API"
  },
  "basePath" : "/api",
  "tags" : [ {
    "name" : "v1flexsubscriptions"
  }, {
    "name" : "v2stacks"
  }, {
    "name" : "v3{workspaceId}connectors"
  }, {
    "name" : "v3{workspaceId}audits"
  }, {
    "name" : "v1ldap"
  }, {
    "name" : "v1stacks"
  }, {
    "name" : "v3workspaces"
  }, {
    "name" : "v3{workspaceId}users"
  }, {
    "name" : "v3{workspaceId}imagecatalogs"
  }, {
    "name" : "v1smartsensesubscriptions"
  }, {
    "name" : "v3{workspaceId}knoxservices"
  }, {
    "name" : "v3{workspaceId}filesystems"
  }, {
    "name" : "v1connectors"
  }, {
    "name" : "v3utils"
  }, {
    "name" : "v3{workspaceId}blueprints"
  }, {
    "name" : "v3{workspaceId}flexsubscriptions"
  }, {
    "name" : "v1audits"
  }, {
    "name" : "v1imagecatalogs"
  }, {
    "name" : "v3{workspaceId}ldapconfigs"
  }, {
    "name" : "v1subscriptions"
  }, {
    "name" : "v3{workspaceId}events"
  }, {
    "name" : "v3{workspaceId}mpacks"
  }, {
    "name" : "v1credentials"
  }, {
    "name" : "v3{workspaceId}stacks"
  }, {
    "name" : "v1mpacks"
  }, {
    "name" : "v3{workspaceId}credentials"
  }, {
    "name" : "v1accountpreferences"
  }, {
    "name" : "v3{workspaceId}smartsensesubscriptions"
  }, {
    "name" : "v1util"
  }, {
    "name" : "v1events"
  }, {
    "name" : "v3{workspaceId}rdsconfigs"
  }, {
    "name" : "v1recipes"
  }, {
    "name" : "v1users"
  }, {
    "name" : "v1rdsconfigs"
  }, {
    "name" : "v3{workspaceId}recipes"
  }, {
    "name" : "autoscale"
  }, {
    "name" : "v1proxyconfigs"
  }, {
    "name" : "v2connectors"
  }, {
    "name" : "v1blueprints"
  }, {
    "name" : "v1securityrules"
  }, {
    "name" : "v3{workspaceId}proxyconfigs"
  }, {
    "name" : "v1repositoryconfigs"
  }, {
    "name" : "v1settings"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/autoscale/ambari" : {
      "post" : {
        "tags" : [ "autoscale" ],
        "summary" : "retrieve stack by ambari address",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getStackForAmbariForAutoscale",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AmbariAddress"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      }
    },
    "/autoscale/stack/all" : {
      "get" : {
        "tags" : [ "autoscale" ],
        "summary" : "retrieve all stacks",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getAllStackForAutoscale",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/AutoscaleStackResponse"
              }
            }
          }
        }
      }
    },
    "/autoscale/stack/{id}" : {
      "get" : {
        "tags" : [ "autoscale" ],
        "summary" : "retrieve stack by id",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getStackForAutoscale",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      }
    },
    "/autoscale/stack/{id}/authorize/{owner}/{permission}" : {
      "get" : {
        "tags" : [ "autoscale" ],
        "operationId" : "authorizeForAutoscale",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "owner",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "permission",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            },
            "headers" : { }
          }
        }
      }
    },
    "/autoscale/stack/{id}/certificate" : {
      "get" : {
        "tags" : [ "autoscale" ],
        "summary" : "retrieves the TLS certificate used by the gateway",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getCertificateStackForAutoscale",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CertificateResponse"
            }
          }
        }
      }
    },
    "/autoscale/stack/{id}/cluster/failurereport" : {
      "post" : {
        "tags" : [ "autoscale" ],
        "summary" : "failure report",
        "description" : "Endpoint to report the failed nodes in the given cluster. If recovery mode for the node's hostgroup is AUTO then autorecovery would be started. If recovery mode for the node's hostgroup is MANUAL, the nodes will be marked as unhealthy.",
        "operationId" : "failureReportClusterForAutoscale",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FailureReport"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/autoscale/stack/{id}/cluster/full" : {
      "get" : {
        "tags" : [ "autoscale" ],
        "summary" : "retrieve cluster by stack id",
        "description" : "Clusters are materialised Hadoop services on a given infrastructure. They are built based on a Blueprint (running the components and services specified) and on a configured infrastructure Stack. Once a cluster is created and launched, it can be used the usual way as any Hadoop cluster. We suggest to start with the Cluster's Ambari UI for an overview of your cluster.",
        "operationId" : "getFullClusterForAutoscale",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AutoscaleClusterResponse"
            }
          }
        }
      }
    },
    "/autoscale/stack/{id}/{owner}" : {
      "put" : {
        "tags" : [ "autoscale" ],
        "summary" : "update stack by id",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putStackForAutoscale",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "owner",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateStack"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/autoscale/stack/{id}/{owner}/cluster" : {
      "put" : {
        "tags" : [ "autoscale" ],
        "summary" : "update stack by id",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putClusterForAutoscale",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "owner",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateCluster"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/accountpreferences" : {
      "get" : {
        "tags" : [ "v1accountpreferences" ],
        "summary" : "retrieve account preferences for admin user",
        "description" : "Account related preferences that could be managed by the account admins and different restrictions could be added to Cloudbreak resources.",
        "operationId" : "getAccountPreferencesEndpoint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountPreferencesResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1accountpreferences" ],
        "summary" : "post account preferences of admin user",
        "description" : "Account related preferences that could be managed by the account admins and different restrictions could be added to Cloudbreak resources.",
        "operationId" : "postAccountPreferencesEndpoint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AccountPreferencesRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountPreferencesResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v1accountpreferences" ],
        "summary" : "update account preferences of admin user",
        "description" : "Account related preferences that could be managed by the account admins and different restrictions could be added to Cloudbreak resources.",
        "operationId" : "putAccountPreferencesEndpoint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AccountPreferencesRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountPreferencesResponse"
            }
          }
        }
      }
    },
    "/v1/accountpreferences/isplatformselectiondisabled" : {
      "get" : {
        "tags" : [ "v1accountpreferences" ],
        "summary" : "is platform selection disabled",
        "description" : "Account related preferences that could be managed by the account admins and different restrictions could be added to Cloudbreak resources.",
        "operationId" : "isPlatformSelectionDisabled",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean"
              }
            }
          }
        }
      }
    },
    "/v1/accountpreferences/platformenabled" : {
      "get" : {
        "tags" : [ "v1accountpreferences" ],
        "summary" : "is platform selection enabled",
        "description" : "Account related preferences that could be managed by the account admins and different restrictions could be added to Cloudbreak resources.",
        "operationId" : "platformEnablement",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean"
              }
            }
          }
        }
      }
    },
    "/v1/audits/event/{auditId}" : {
      "get" : {
        "tags" : [ "v1audits" ],
        "operationId" : "getAuditEvent",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "auditId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AuditEvent"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/audits/events/zip/{resourceType}/{resourceId}" : {
      "get" : {
        "tags" : [ "v1audits" ],
        "operationId" : "getAuditEventsZip",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "resourceType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/audits/events/{resourceType}/{resourceId}" : {
      "get" : {
        "tags" : [ "v1audits" ],
        "operationId" : "getAuditEvents",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "resourceType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AuditEvent"
              }
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/blueprints/account" : {
      "get" : {
        "tags" : [ "v1blueprints" ],
        "summary" : "retrieve public and private (owned) blueprints",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "getPublicsBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/BlueprintResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1blueprints" ],
        "summary" : "create blueprint as public resource",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "postPublicBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BlueprintRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BlueprintResponse"
            }
          }
        }
      }
    },
    "/v1/blueprints/account/{name}" : {
      "get" : {
        "tags" : [ "v1blueprints" ],
        "summary" : "retrieve a public or private (owned) blueprint by name",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "getPublicBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BlueprintResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1blueprints" ],
        "summary" : "delete public (owned) or private blueprint by name",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "deletePublicBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/blueprints/user" : {
      "get" : {
        "tags" : [ "v1blueprints" ],
        "summary" : "retrieve private blueprints",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "getPrivatesBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/BlueprintResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1blueprints" ],
        "summary" : "create blueprint as private resource",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "postPrivateBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BlueprintRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BlueprintResponse"
            }
          }
        }
      }
    },
    "/v1/blueprints/user/{name}" : {
      "get" : {
        "tags" : [ "v1blueprints" ],
        "summary" : "retrieve a private blueprint by name",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "getPrivateBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BlueprintResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1blueprints" ],
        "summary" : "delete private blueprint by name",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "deletePrivateBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/blueprints/{id}" : {
      "get" : {
        "tags" : [ "v1blueprints" ],
        "summary" : "retrieve blueprint by id",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "getBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BlueprintResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1blueprints" ],
        "summary" : "delete blueprint by id",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "deleteBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/blueprints/{id}/request" : {
      "get" : {
        "tags" : [ "v1blueprints" ],
        "summary" : "retrieve validation request by blueprint id",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "getBlueprintRequestFromId",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BlueprintRequest"
            }
          }
        }
      }
    },
    "/v1/connectors" : {
      "get" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive available platforms",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getPlatforms",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "extended",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v1/connectors/accessconfigs" : {
      "post" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive access configs with properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getAccessConfigs",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformAccessConfigsResponse"
            }
          }
        }
      }
    },
    "/v1/connectors/custom" : {
      "post" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive special properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getSpecialProperties",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SpecialParametersJson"
            }
          }
        }
      }
    },
    "/v1/connectors/disktypes" : {
      "get" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive available disk types",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getDisktypes",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformDisksJson"
            }
          }
        }
      }
    },
    "/v1/connectors/disktypes/{type}" : {
      "get" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive disks by type",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getDisktypeByType",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/connectors/encryptionkeys" : {
      "post" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive encryption keys with properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getEncryptionKeys",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformEncryptionKeysResponse"
            }
          }
        }
      }
    },
    "/v1/connectors/gateways" : {
      "post" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive gateways with properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getGatewaysCredentialId",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformGatewaysResponse"
            }
          }
        }
      }
    },
    "/v1/connectors/ippools" : {
      "post" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive ip pools with properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getIpPoolsCredentialId",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformIpPoolsResponse"
            }
          }
        }
      }
    },
    "/v1/connectors/networks" : {
      "post" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive network properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getPlatformNetworks",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformNetworksResponse"
            }
          }
        }
      }
    },
    "/v1/connectors/ochestrators" : {
      "get" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive available orchestrator types",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getOrchestratortypes",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformOrchestratorsJson"
            }
          }
        }
      }
    },
    "/v1/connectors/ochestrators/{type}" : {
      "get" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive orchestrators by type",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getOchestratorsByType",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/connectors/recommendation" : {
      "post" : {
        "tags" : [ "v1connectors" ],
        "summary" : "creates a recommendation that advises cloud resources for the given blueprint",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "createRecommendation",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RecommendationRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecommendationResponse"
            }
          }
        }
      }
    },
    "/v1/connectors/regions" : {
      "get" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive available regions",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getRegions",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformRegionsJson"
            }
          }
        }
      }
    },
    "/v1/connectors/regions/av/{type}" : {
      "get" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive availability zones by type",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getRegionAvByType",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/connectors/regions/r/{type}" : {
      "get" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive regions by type",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getRegionRByType",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/connectors/securitygroups" : {
      "post" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive securitygroups properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getPlatformSecurityGroups",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformSecurityGroupsResponse"
            }
          }
        }
      }
    },
    "/v1/connectors/sshkeys" : {
      "post" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive sshkeys properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getPlatformSShKeys",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformSshKeysResponse"
            }
          }
        }
      }
    },
    "/v1/connectors/tagspecifications" : {
      "get" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive tag specifications",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getTagSpecifications",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TagSpecificationsJson"
            }
          }
        }
      }
    },
    "/v1/connectors/variants" : {
      "get" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive available platform variants",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getPlatformVariants",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformVariantsJson"
            }
          }
        }
      }
    },
    "/v1/connectors/variants/{type}" : {
      "get" : {
        "tags" : [ "v1connectors" ],
        "summary" : "retrive a platform variant by type",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getPlatformVariantByType",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/credentials/account" : {
      "get" : {
        "tags" : [ "v1credentials" ],
        "summary" : "retrieve public and private (owned) credentials",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "getPublicsCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/CredentialResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1credentials" ],
        "summary" : "create credential as public resource",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "postPublicCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v1credentials" ],
        "summary" : "modify public credential resource",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "putPublicCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialResponse"
            }
          }
        }
      }
    },
    "/v1/credentials/account/{name}" : {
      "get" : {
        "tags" : [ "v1credentials" ],
        "summary" : "retrieve a public or private (owned) credential by name",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "getPublicCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1credentials" ],
        "summary" : "delete public (owned) or private credential by name",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "deletePublicCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/credentials/accountinteractivelogin" : {
      "post" : {
        "tags" : [ "v1credentials" ],
        "summary" : "interactive login",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "publicInteractiveLoginCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/credentials/user" : {
      "get" : {
        "tags" : [ "v1credentials" ],
        "summary" : "retrieve private credentials",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "getPrivatesCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/CredentialResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1credentials" ],
        "summary" : "create credential as private resource",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "postPrivateCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v1credentials" ],
        "summary" : "modify private credential resource",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "putPrivateCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialResponse"
            }
          }
        }
      }
    },
    "/v1/credentials/user/{name}" : {
      "get" : {
        "tags" : [ "v1credentials" ],
        "summary" : "retrieve a private credential by name",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "getPrivateCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1credentials" ],
        "summary" : "delete private credential by name",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "deletePrivateCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/credentials/userinteractivelogin" : {
      "post" : {
        "tags" : [ "v1credentials" ],
        "summary" : "interactive login",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "privateInteractiveLoginCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v1/credentials/{id}" : {
      "get" : {
        "tags" : [ "v1credentials" ],
        "summary" : "retrieve credential by id",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "getCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1credentials" ],
        "summary" : "delete credential by id",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "deleteCredential",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/events" : {
      "get" : {
        "tags" : [ "v1events" ],
        "summary" : "retrieve events by timestamp (long)",
        "description" : "Events are used to track stack creation initiated by cloudbreak users. Events are generated by the backend when resources requested by the user become available or unavailable",
        "operationId" : "getEvents",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "since",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CloudbreakEvent"
              }
            }
          }
        }
      }
    },
    "/v1/events/struct/zip/{stackId}" : {
      "get" : {
        "tags" : [ "v1events" ],
        "operationId" : "getStructuredEventsZip",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "stackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/events/struct/{stackId}" : {
      "get" : {
        "tags" : [ "v1events" ],
        "operationId" : "getStructuredEvents",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "stackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StructuredEventContainer"
            },
            "headers" : { }
          }
        }
      }
    },
    "/v1/events/{stackId}" : {
      "get" : {
        "tags" : [ "v1events" ],
        "summary" : "retrieve events by stackid (long)",
        "description" : "Events are used to track stack creation initiated by cloudbreak users. Events are generated by the backend when resources requested by the user become available or unavailable",
        "operationId" : "getEventsBySTackId",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "stackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CloudbreakEvent"
              }
            }
          }
        }
      }
    },
    "/v1/flexsubscriptions/account" : {
      "get" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "retrieve public and private (owned) Flex subscriptions",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "getPublicFlexSubscriptions",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FlexSubscriptionResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "create Flex subscription as public resource",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "postPublicFlexSubscription",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FlexSubscriptionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FlexSubscriptionResponse"
            }
          }
        }
      }
    },
    "/v1/flexsubscriptions/account/setdefault/{name}" : {
      "put" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "sets the account default flag on the Flex subscription",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "putPublicDefaultFlexSubscriptionByName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/flexsubscriptions/account/setusedforcontroller/{name}" : {
      "put" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "sets the account 'used for controller' flag on the Flex subscription",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "putPublicUsedForControllerFlexSubscriptionByName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/flexsubscriptions/account/{name}" : {
      "get" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "retrieve a public or private (owned) Flex subscription by name",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "getPublicFlexSubscriptionByName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FlexSubscriptionResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "delete public (owned) or private Flex subscription by name",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "deletePublicFlexSubscriptionByName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FlexSubscriptionResponse"
            }
          }
        }
      }
    },
    "/v1/flexsubscriptions/setdefault/{id}" : {
      "put" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "sets the account default flag on the Flex subscription",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "putDefaultFlexSubscriptionById",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/flexsubscriptions/setusedforcontroller/{id}" : {
      "put" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "sets the account 'used for controller' flag on the Flex subscription",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "putUsedForControllerFlexSubscriptionById",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/flexsubscriptions/user" : {
      "get" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "retrieve private Flex subscriptions",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "getPrivateFlexSubscriptions",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FlexSubscriptionResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "create Flex subscription as private resource",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "postPrivateFlexSubscription",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FlexSubscriptionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FlexSubscriptionResponse"
            }
          }
        }
      }
    },
    "/v1/flexsubscriptions/user/{name}" : {
      "get" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "retrieve a private Flex subscription by name",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "getPrivateFlexSubscriptionByName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FlexSubscriptionResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "delete private Flex subscription by name",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "deletePrivateFlexSubscriptionByName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FlexSubscriptionResponse"
            }
          }
        }
      }
    },
    "/v1/flexsubscriptions/{id}" : {
      "get" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "retrieve Flex subscription by id",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "getFlexSubscriptionById",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FlexSubscriptionResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1flexsubscriptions" ],
        "summary" : "delete Flex subscription by id",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "deleteFlexSubscriptionById",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FlexSubscriptionResponse"
            }
          }
        }
      }
    },
    "/v1/imagecatalogs/account" : {
      "get" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "list available custom image catalogs as public resources",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "getPublicsImageCatalogs",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ImageCatalogResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "create Image Catalog as public resources",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "postPublicImageCatalog",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ImageCatalogRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "update public (owned) or private Image Catalog by id",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "putPublicImageCatalog",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateImageCatalogRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogResponse"
            }
          }
        }
      }
    },
    "/v1/imagecatalogs/account/upgrade/{stackName}" : {
      "get" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "determines available images for the given stackfrom the default image catalog",
        "description" : "Provides an interface to determine available Virtual Machine images for the given stack.Please consider running sync beforehand",
        "operationId" : "getImagesByStackNameAndDefaultImageCatalog",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImagesResponse"
            }
          }
        }
      }
    },
    "/v1/imagecatalogs/account/upgrade/{stackName}/{name}" : {
      "get" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "determines available images for the given stackfrom the given imagecatalog name",
        "description" : "Provides an interface to determine available Virtual Machine images for the given stack.Please consider running sync beforehand",
        "operationId" : "getImagesByStackNameAndCustomImageCatalog",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImagesResponse"
            }
          }
        }
      }
    },
    "/v1/imagecatalogs/account/{name}" : {
      "get" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "get custom image catalog by name",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "getPublicImageCatalogsByName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "withImages",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "delete public (owned) or private Image Catalog by id",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "deletePublicImageCatalogByName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/imagecatalogs/account/{name}/{platform}" : {
      "get" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "determines available images for the Cloudbreak version by the given provider and given image catalog url",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "getPublicImagesByProviderAndCustomImageCatalog",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "platform",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImagesResponse"
            }
          }
        }
      }
    },
    "/v1/imagecatalogs/setdefault/{name}" : {
      "put" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "update public (owned) or private Image Catalog by id",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "putSetDefaultImageCatalogByName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogResponse"
            }
          }
        }
      }
    },
    "/v1/imagecatalogs/user" : {
      "post" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "create Image Catalog as private resources",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "postPrivateImageCatalog",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ImageCatalogRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogResponse"
            }
          }
        }
      }
    },
    "/v1/imagecatalogs/{name}/request" : {
      "get" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "retrieve imagecatalog request by imagecatalog name",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "getImageCatalogRequestFromName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogRequest"
            }
          }
        }
      }
    },
    "/v1/imagecatalogs/{platform}" : {
      "get" : {
        "tags" : [ "v1imagecatalogs" ],
        "summary" : "determines available images for the Cloudbreak version by the given provider and default image catalog url",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "getImagesByProvider",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "platform",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImagesResponse"
            }
          }
        }
      }
    },
    "/v1/ldap/account" : {
      "get" : {
        "tags" : [ "v1ldap" ],
        "summary" : "retrieve public and private (owned) LDAP configs",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "getPublicsLdap",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/LdapConfigResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1ldap" ],
        "summary" : "create LDAP config as public resource",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "postPublicLdap",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LdapConfigRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapConfigResponse"
            }
          }
        }
      }
    },
    "/v1/ldap/account/{name}" : {
      "get" : {
        "tags" : [ "v1ldap" ],
        "summary" : "retrieve a public or private (owned) LDAP config by name",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "getPublicLdap",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1ldap" ],
        "summary" : "delete public (owned) or private LDAP config by name",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "deletePublicLdap",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/ldap/testconnect" : {
      "post" : {
        "tags" : [ "v1ldap" ],
        "summary" : "test that the connection could be established of an existing or new LDAP config",
        "description" : "",
        "operationId" : "postLdapConnectionTest",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LDAPTestRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapTestResult"
            }
          }
        }
      }
    },
    "/v1/ldap/user" : {
      "get" : {
        "tags" : [ "v1ldap" ],
        "summary" : "retrieve private LDAP configs",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "getPrivatesLdap",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/LdapConfigResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1ldap" ],
        "summary" : "create LDAP config as private resource",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "postPrivateLdap",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LdapConfigRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapConfigResponse"
            }
          }
        }
      }
    },
    "/v1/ldap/user/{name}" : {
      "get" : {
        "tags" : [ "v1ldap" ],
        "summary" : "retrieve a private LDAP config by name",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "getPrivateLdap",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1ldap" ],
        "summary" : "delete private LDAP config by name",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "deletePrivateLdap",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/ldap/{id}" : {
      "get" : {
        "tags" : [ "v1ldap" ],
        "summary" : "retrieve LDAP config by id",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "getLdap",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1ldap" ],
        "summary" : "delete LDAP config by id",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "deleteLdap",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/ldap/{name}/request" : {
      "get" : {
        "tags" : [ "v1ldap" ],
        "summary" : "get request",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "getLdapRequestFromName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapConfigRequest"
            }
          }
        }
      }
    },
    "/v1/mpacks/account" : {
      "get" : {
        "tags" : [ "v1mpacks" ],
        "summary" : "retrieve public and private (owned) management packs",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "getPublicManagementPacks",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/ManagementPackResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1mpacks" ],
        "summary" : "create management pack as public resource",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "postPublicManagementPack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ManagementPackRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManagementPackResponse"
            }
          }
        }
      }
    },
    "/v1/mpacks/account/{name}" : {
      "get" : {
        "tags" : [ "v1mpacks" ],
        "summary" : "retrieve a public or private (owned) management pack by name",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "getPublicManagementPack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManagementPackResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1mpacks" ],
        "summary" : "delete public (owned) or private management pack by name",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "deletePublicManagementPack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/mpacks/user" : {
      "get" : {
        "tags" : [ "v1mpacks" ],
        "summary" : "retrieve private management packs",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "getPrivateManagementPacks",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/ManagementPackResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1mpacks" ],
        "summary" : "create management pack as private resource",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "postPrivateManagementPack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ManagementPackRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManagementPackResponse"
            }
          }
        }
      }
    },
    "/v1/mpacks/user/{name}" : {
      "get" : {
        "tags" : [ "v1mpacks" ],
        "summary" : "retrieve a private management pack by name",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "getPrivateManagementPack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManagementPackResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1mpacks" ],
        "summary" : "delete private management pack by name",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "deletePrivateManagementPack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/mpacks/{id}" : {
      "get" : {
        "tags" : [ "v1mpacks" ],
        "summary" : "retrieve management pack by id",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "getManagementPack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManagementPackResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1mpacks" ],
        "summary" : "delete management pack by id",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "deleteManagementPack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/proxyconfigs/account" : {
      "get" : {
        "tags" : [ "v1proxyconfigs" ],
        "summary" : "retrieve public and private (owned) proxy configurations",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "getPublicsProxyConfig",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/ProxyConfigResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1proxyconfigs" ],
        "summary" : "create proxy configuration as public resource",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "postPublicProxyConfig",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProxyConfigRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyConfigResponse"
            }
          }
        }
      }
    },
    "/v1/proxyconfigs/account/{name}" : {
      "get" : {
        "tags" : [ "v1proxyconfigs" ],
        "summary" : "retrieve a public or private (owned) proxy configuration by name",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "getPublicProxyConfig",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1proxyconfigs" ],
        "summary" : "delete public (owned) or private proxy configuration by name",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "deletePublicProxyConfig",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyConfigResponse"
            }
          }
        }
      }
    },
    "/v1/proxyconfigs/user" : {
      "get" : {
        "tags" : [ "v1proxyconfigs" ],
        "summary" : "retrieve private proxy configurations",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "getPrivatesProxyConfig",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/ProxyConfigResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1proxyconfigs" ],
        "summary" : "create proxy configuration as private resource",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "postPrivateProxyConfig",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProxyConfigRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyConfigResponse"
            }
          }
        }
      }
    },
    "/v1/proxyconfigs/user/{name}" : {
      "get" : {
        "tags" : [ "v1proxyconfigs" ],
        "summary" : "retrieve a private proxy configuration by name",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "getPrivateProxyConfig",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1proxyconfigs" ],
        "summary" : "delete private proxy configuration by name",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "deletePrivateProxyConfig",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyConfigResponse"
            }
          }
        }
      }
    },
    "/v1/proxyconfigs/{id}" : {
      "get" : {
        "tags" : [ "v1proxyconfigs" ],
        "summary" : "retrieve proxy configuration by id",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "getProxyConfig",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1proxyconfigs" ],
        "summary" : "delete proxy configuration by id",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "deleteProxyConfig",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyConfigResponse"
            }
          }
        }
      }
    },
    "/v1/rdsconfigs/account" : {
      "get" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "retrieve public and private (owned) RDS configurations",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "getPublicsRds",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/RDSConfigResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "create RDS configuration as public resource",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "postPublicRds",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RdsConfig"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RDSConfigResponse"
            }
          }
        }
      }
    },
    "/v1/rdsconfigs/account/{name}" : {
      "get" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "retrieve a public or private (owned) RDS configuration by name",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "getPublicRds",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RDSConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "delete public (owned) or private RDS configuration by name",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "deletePublicRds",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/rdsconfigs/testconnect" : {
      "post" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "test RDS connectivity",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "testRdsConnection",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RdsTestRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RdsTestResult"
            }
          }
        }
      }
    },
    "/v1/rdsconfigs/user" : {
      "get" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "retrieve private RDS configurations",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "getPrivatesRds",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/RDSConfigResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "create RDS configuration as private resource",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "postPrivateRds",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RdsConfig"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RDSConfigResponse"
            }
          }
        }
      }
    },
    "/v1/rdsconfigs/user/{name}" : {
      "get" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "retrieve a private RDS configuration by name",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "getPrivateRds",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RDSConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "delete private RDS configuration by name",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "deletePrivateRds",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/rdsconfigs/{id}" : {
      "get" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "retrieve RDS configuration by id",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "getRds",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RDSConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "delete RDS configuration by id",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "deleteRds",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/rdsconfigs/{name}/request" : {
      "get" : {
        "tags" : [ "v1rdsconfigs" ],
        "summary" : "get request",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "getRdsRequestFromName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RdsConfig"
            }
          }
        }
      }
    },
    "/v1/recipes/account" : {
      "get" : {
        "tags" : [ "v1recipes" ],
        "summary" : "retrieve public and private (owned) recipes",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "getPublicsRecipe",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/RecipeResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1recipes" ],
        "summary" : "create recipe as public resource",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "postPublicRecipe",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RecipeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecipeResponse"
            }
          }
        }
      }
    },
    "/v1/recipes/account/{name}" : {
      "get" : {
        "tags" : [ "v1recipes" ],
        "summary" : "retrieve a public or private (owned) recipe by name",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "getPublicRecipe",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecipeResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1recipes" ],
        "summary" : "delete public (owned) or private recipe by name",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "deletePublicRecipe",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/recipes/user" : {
      "get" : {
        "tags" : [ "v1recipes" ],
        "summary" : "retrieve private recipes",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "getPrivatesRecipe",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/RecipeResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1recipes" ],
        "summary" : "create recipe as private resource",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "postPrivateRecipe",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RecipeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecipeResponse"
            }
          }
        }
      }
    },
    "/v1/recipes/user/{name}" : {
      "get" : {
        "tags" : [ "v1recipes" ],
        "summary" : "retrieve a private recipe by name",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "getPrivateRecipe",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecipeResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1recipes" ],
        "summary" : "delete private recipe by name",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "deletePrivateRecipe",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/recipes/{id}" : {
      "get" : {
        "tags" : [ "v1recipes" ],
        "summary" : "retrieve recipe by id",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "getRecipe",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecipeResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1recipes" ],
        "summary" : "delete recipe by id",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "deleteRecipe",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/recipes/{name}/request" : {
      "get" : {
        "tags" : [ "v1recipes" ],
        "summary" : "retrieve recipe request by recipe name",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "getRecipeRequestFromName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecipeRequest"
            }
          }
        }
      }
    },
    "/v1/repositoryconfigs/validate" : {
      "post" : {
        "tags" : [ "v1repositoryconfigs" ],
        "summary" : "validate repository configs fields, check their availability",
        "description" : "Repository configs validation related operations",
        "operationId" : "postRepositoryConfigsValidation",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RepoConfigValidationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RepoConfigValidationResponse"
            }
          }
        }
      }
    },
    "/v1/securityrules/defaultsecurityrules" : {
      "get" : {
        "tags" : [ "v1securityrules" ],
        "summary" : "get default security rules",
        "description" : "Security Rules operations",
        "operationId" : "getDefaultSecurityRules",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SecurityRulesResponse"
            }
          }
        }
      }
    },
    "/v1/settings/all" : {
      "get" : {
        "tags" : [ "v1settings" ],
        "summary" : "retrive all available settings",
        "description" : "Collecting Cloudbreak specific resource settings.",
        "operationId" : "getAllSettings",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/v1/settings/database" : {
      "get" : {
        "tags" : [ "v1settings" ],
        "summary" : "retrive available Ambari database settings",
        "description" : "Collecting Cloudbreak specific resource settings.",
        "operationId" : "getDatabaseConfigSettings",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v1/settings/recipe" : {
      "get" : {
        "tags" : [ "v1settings" ],
        "summary" : "retrive available recipe settings",
        "description" : "Collecting Cloudbreak specific resource settings.",
        "operationId" : "getRecipeSettings",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v1/smartsensesubscriptions" : {
      "get" : {
        "tags" : [ "v1smartsensesubscriptions" ],
        "summary" : "retrieve default SmartSense subscription",
        "description" : "SmartSense subscriptions could be configured.",
        "operationId" : "getSmartSenseSubscription",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SmartSenseSubscriptionJson"
            }
          }
        }
      }
    },
    "/v1/smartsensesubscriptions/{id}" : {
      "get" : {
        "tags" : [ "v1smartsensesubscriptions" ],
        "summary" : "retrieve SmartSense subscription by id",
        "description" : "SmartSense subscriptions could be configured.",
        "operationId" : "getSmartSenseSubscriptionById",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SmartSenseSubscriptionJson"
            }
          }
        }
      }
    },
    "/v1/stacks/account" : {
      "get" : {
        "tags" : [ "v1stacks" ],
        "summary" : "retrieve public and private (owned) stacks",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getPublicsStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/StackResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1stacks" ],
        "summary" : "create stack as public resource",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "postPublicStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      }
    },
    "/v1/stacks/account/{name}" : {
      "get" : {
        "tags" : [ "v1stacks" ],
        "summary" : "retrieve a public or private (owned) stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getPublicStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "entry",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1stacks" ],
        "summary" : "delete public (owned) or private stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deletePublicStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "forced",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "deleteDependencies",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/stacks/account/{name}/cluster" : {
      "get" : {
        "tags" : [ "v1stacks" ],
        "summary" : "retrieve cluster by stack name (public)",
        "description" : "Clusters are materialised Hadoop services on a given infrastructure. They are built based on a Blueprint (running the components and services specified) and on a configured infrastructure Stack. Once a cluster is created and launched, it can be used the usual way as any Hadoop cluster. We suggest to start with the Cluster's Ambari UI for an overview of your cluster.",
        "operationId" : "getPublicCluster",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ClusterResponse"
            }
          }
        }
      }
    },
    "/v1/stacks/platformVariants" : {
      "get" : {
        "tags" : [ "v1stacks" ],
        "summary" : "retrieve available platform variants",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "variantsStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformVariantsJson"
            }
          }
        }
      }
    },
    "/v1/stacks/user" : {
      "get" : {
        "tags" : [ "v1stacks" ],
        "summary" : "retrieve private stack",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getPrivatesStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/StackResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1stacks" ],
        "summary" : "create stack as private resource",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "postPrivateStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      }
    },
    "/v1/stacks/user/{name}" : {
      "get" : {
        "tags" : [ "v1stacks" ],
        "summary" : "retrieve a private stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getPrivateStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "entry",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v1stacks" ],
        "summary" : "delete private stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deletePrivateStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "forced",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "deleteDependencies",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/stacks/user/{name}/cluster" : {
      "get" : {
        "tags" : [ "v1stacks" ],
        "summary" : "retrieve cluster by stack name (private)",
        "description" : "Clusters are materialised Hadoop services on a given infrastructure. They are built based on a Blueprint (running the components and services specified) and on a configured infrastructure Stack. Once a cluster is created and launched, it can be used the usual way as any Hadoop cluster. We suggest to start with the Cluster's Ambari UI for an overview of your cluster.",
        "operationId" : "getPrivateCluster",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ClusterResponse"
            }
          }
        }
      }
    },
    "/v1/stacks/validate" : {
      "post" : {
        "tags" : [ "v1stacks" ],
        "summary" : "validate stack",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "validateStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackValidationRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/stacks/{id}" : {
      "get" : {
        "tags" : [ "v1stacks" ],
        "summary" : "retrieve stack by id",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entry",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v1stacks" ],
        "summary" : "update stack by id",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateStack"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "v1stacks" ],
        "summary" : "delete stack by id",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deleteStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "forced",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "deleteDependencies",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/stacks/{id}/cluster" : {
      "get" : {
        "tags" : [ "v1stacks" ],
        "summary" : "retrieve cluster by stack id",
        "description" : "Clusters are materialised Hadoop services on a given infrastructure. They are built based on a Blueprint (running the components and services specified) and on a configured infrastructure Stack. Once a cluster is created and launched, it can be used the usual way as any Hadoop cluster. We suggest to start with the Cluster's Ambari UI for an overview of your cluster.",
        "operationId" : "getCluster",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ClusterResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v1stacks" ],
        "summary" : "create cluster for stack",
        "description" : "Clusters are materialised Hadoop services on a given infrastructure. They are built based on a Blueprint (running the components and services specified) and on a configured infrastructure Stack. Once a cluster is created and launched, it can be used the usual way as any Hadoop cluster. We suggest to start with the Cluster's Ambari UI for an overview of your cluster.",
        "operationId" : "postCluster",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ClusterResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v1stacks" ],
        "summary" : "update cluster by stack id",
        "description" : "Clusters are materialised Hadoop services on a given infrastructure. They are built based on a Blueprint (running the components and services specified) and on a configured infrastructure Stack. Once a cluster is created and launched, it can be used the usual way as any Hadoop cluster. We suggest to start with the Cluster's Ambari UI for an overview of your cluster.",
        "operationId" : "putCluster",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateCluster"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "v1stacks" ],
        "summary" : "delete cluster on a specific stack",
        "description" : "Clusters are materialised Hadoop services on a given infrastructure. They are built based on a Blueprint (running the components and services specified) and on a configured infrastructure Stack. Once a cluster is created and launched, it can be used the usual way as any Hadoop cluster. We suggest to start with the Cluster's Ambari UI for an overview of your cluster.",
        "operationId" : "deleteCluster",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "withStackDelete",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "deleteDependencies",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/stacks/{id}/cluster/config" : {
      "post" : {
        "tags" : [ "v1stacks" ],
        "summary" : "get cluster properties with blueprint outputs",
        "description" : "Clusters are materialised Hadoop services on a given infrastructure. They are built based on a Blueprint (running the components and services specified) and on a configured infrastructure Stack. Once a cluster is created and launched, it can be used the usual way as any Hadoop cluster. We suggest to start with the Cluster's Ambari UI for an overview of your cluster.",
        "operationId" : "getConfigsCluster",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConfigsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ConfigsResponse"
            }
          }
        }
      }
    },
    "/v1/stacks/{id}/cluster/gateway" : {
      "put" : {
        "tags" : [ "v1stacks" ],
        "summary" : "update topologies of a gateway",
        "description" : "Gateway is an Apache Knox Gateway, which is an Application Gateway for interacting with REST APIs andUIs of Apache Hadoop deployments. Provides Authentication and other services.",
        "operationId" : "updateGatewayTopologies",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateGatewayTopologiesJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GatewayJson"
            }
          }
        }
      }
    },
    "/v1/stacks/{id}/cluster/manualrepair" : {
      "post" : {
        "tags" : [ "v1stacks" ],
        "summary" : "repair the cluster",
        "description" : "Removing the failed nodes and starting new nodes to substitute them.",
        "operationId" : "repairCluster",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterRepairRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/stacks/{id}/cluster/upgrade" : {
      "post" : {
        "tags" : [ "v1stacks" ],
        "summary" : "upgrade the Ambari version",
        "description" : "Ambari is used to provision the Hadoop clusters.",
        "operationId" : "upgradeCluster",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AmbariRepoDetails"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/stacks/{id}/status" : {
      "get" : {
        "tags" : [ "v1stacks" ],
        "summary" : "retrieve stack status by stack id",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "statusStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v1/stacks/{stackId}/deleteInstances" : {
      "delete" : {
        "tags" : [ "v1stacks" ],
        "summary" : "delete instance resource from stack",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deleteInstancesStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "stackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "instanceIds",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/stacks/{stackId}/{instanceId}" : {
      "delete" : {
        "tags" : [ "v1stacks" ],
        "summary" : "delete instance resource from stack",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deleteInstanceStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "stackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "forced",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/subscriptions" : {
      "post" : {
        "tags" : [ "v1subscriptions" ],
        "summary" : "retrive subscribe identifier",
        "description" : "Accepting client subscriptions to notification events.",
        "operationId" : "subscribeSubscription",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SubscriptionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Id"
            }
          }
        }
      }
    },
    "/v1/users" : {
      "get" : {
        "tags" : [ "v1users" ],
        "summary" : "retrieve all users in the tenant",
        "description" : "Users can be invited under an account by the administrator, and all resources (e.g. resources, networks, blueprints, credentials, clusters) can be shared across account users",
        "operationId" : "getAllUsers",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/UserResponseJson"
              }
            }
          }
        }
      }
    },
    "/v1/users/evict" : {
      "delete" : {
        "tags" : [ "v1users" ],
        "summary" : "remove current user from cache",
        "description" : "Users can be invited under an account by the administrator, and all resources (e.g. resources, networks, blueprints, credentials, clusters) can be shared across account users",
        "operationId" : "evictCurrentUserDetails",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/v1/users/profile" : {
      "get" : {
        "tags" : [ "v1users" ],
        "summary" : "user related profile",
        "description" : "Users can be invited under an account by the administrator, and all resources (e.g. resources, networks, blueprints, credentials, clusters) can be shared across account users",
        "operationId" : "getUserProfile",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserProfileResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v1users" ],
        "summary" : "modify user related profile",
        "description" : "Users can be invited under an account by the administrator, and all resources (e.g. resources, networks, blueprints, credentials, clusters) can be shared across account users",
        "operationId" : "modifyProfile",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserProfileRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v1/users/{id}" : {
      "put" : {
        "tags" : [ "v1users" ],
        "summary" : "remove user from cache (by username)",
        "description" : "Users can be invited under an account by the administrator, and all resources (e.g. resources, networks, blueprints, credentials, clusters) can be shared across account users",
        "operationId" : "evictUserDetails",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/v1/util/ambari-database" : {
      "post" : {
        "tags" : [ "v1util" ],
        "summary" : "tests a database connection parameters",
        "description" : "",
        "operationId" : "testAmbariDatabaseUtil",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AmbariDatabaseDetails"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AmbariDatabaseTestResult"
            }
          }
        }
      }
    },
    "/v1/util/client/{version}" : {
      "get" : {
        "tags" : [ "v1util" ],
        "summary" : "checks the client version",
        "description" : "",
        "operationId" : "checkClientVersion",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VersionCheckResult"
            }
          }
        }
      }
    },
    "/v1/util/cloudstoragematrix" : {
      "get" : {
        "tags" : [ "v1util" ],
        "summary" : "returns supported cloud storage for stack version",
        "description" : "Define stack version at least at patch level eg. 2.6.0",
        "operationId" : "getCloudStorageMatrix",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "stackVersion",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CloudStorageSupportedResponse"
              }
            }
          }
        }
      }
    },
    "/v1/util/custom-parameters" : {
      "post" : {
        "tags" : [ "v1util" ],
        "summary" : "returns custom parameters",
        "description" : "",
        "operationId" : "getCustomParameters",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ParametersQueryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ParametersQueryResponse"
            }
          }
        }
      }
    },
    "/v1/util/filesystem-parameters" : {
      "post" : {
        "tags" : [ "v1util" ],
        "summary" : "returns filesystem parameters",
        "description" : "",
        "operationId" : "getFileSystemParameters",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StructuredParametersQueryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StructuredParameterQueriesResponse"
            }
          }
        }
      }
    },
    "/v1/util/knoxservices/{blueprintName}" : {
      "get" : {
        "tags" : [ "v1util" ],
        "summary" : "returns supported knox services",
        "description" : "",
        "operationId" : "getKnoxServices",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "blueprintName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExposedServiceResponse"
              }
            }
          }
        }
      }
    },
    "/v1/util/rds-database" : {
      "post" : {
        "tags" : [ "v1util" ],
        "summary" : "create a database for the service in the RDS if the connection could be created",
        "description" : "",
        "operationId" : "createRDSDatabaseUtil",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RDSBuildRequest"
          }
        }, {
          "name" : "target",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RdsBuildResult"
            }
          }
        }
      }
    },
    "/v1/util/stackmatrix" : {
      "get" : {
        "tags" : [ "v1util" ],
        "summary" : "returns default ambari details for distinct HDP and HDF",
        "description" : "",
        "operationId" : "getStackMatrixUtil",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackMatrix"
            }
          }
        }
      }
    },
    "/v2/connectors/regions" : {
      "post" : {
        "tags" : [ "v2connectors" ],
        "summary" : "retrive regions by type",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getRegionsByCredentialId",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RegionResponse"
            }
          }
        }
      }
    },
    "/v2/connectors/vmtypes" : {
      "post" : {
        "tags" : [ "v2connectors" ],
        "summary" : "retrive vmtype properties by credential",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getVmTypesByCredentialId",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformVmtypesResponse"
            }
          }
        }
      }
    },
    "/v2/stacks/account" : {
      "get" : {
        "tags" : [ "v2stacks" ],
        "summary" : "retrieve public and private (owned) stacks",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getPublicsStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/StackResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v2stacks" ],
        "summary" : "create stack as public resource",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "postPublicStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackV2Request"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      }
    },
    "/v2/stacks/account/{name}" : {
      "get" : {
        "tags" : [ "v2stacks" ],
        "summary" : "retrieve a public or private (owned) stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getPublicStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "entry",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v2stacks" ],
        "summary" : "delete public (owned) or private stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deletePublicStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "forced",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "deleteDependencies",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/ambari_password/{name}" : {
      "put" : {
        "tags" : [ "v2stacks" ],
        "summary" : "update stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putpasswordStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserNamePassword"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/blueprint" : {
      "post" : {
        "tags" : [ "v2stacks" ],
        "summary" : "create stack as public resource for blueprint",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "postPublicStackV2ForBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackV2Request"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GeneratedBlueprintResponse"
            }
          }
        }
      }
    },
    "/v2/stacks/changeImage/{name}" : {
      "put" : {
        "tags" : [ "v2stacks" ],
        "summary" : "update stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "changeImage",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackImageChangeRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/platformVariants" : {
      "get" : {
        "tags" : [ "v2stacks" ],
        "summary" : "retrieve available platform variants",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "variantsStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformVariantsJson"
            }
          }
        }
      }
    },
    "/v2/stacks/reinstall/{name}" : {
      "put" : {
        "tags" : [ "v2stacks" ],
        "summary" : "update stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putreinstallStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReinstallRequestV2"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/scaling/{name}" : {
      "put" : {
        "tags" : [ "v2stacks" ],
        "summary" : "update stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putscalingStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackScaleRequestV2"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/start/{name}" : {
      "put" : {
        "tags" : [ "v2stacks" ],
        "summary" : "update stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putstartStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/stop/{name}" : {
      "put" : {
        "tags" : [ "v2stacks" ],
        "summary" : "update stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putstopStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/sync/{name}" : {
      "put" : {
        "tags" : [ "v2stacks" ],
        "summary" : "update stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putsyncStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/user" : {
      "get" : {
        "tags" : [ "v2stacks" ],
        "summary" : "retrieve private stack",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getPrivatesStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/StackResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v2stacks" ],
        "summary" : "create stack as private resource",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "postPrivateStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackV2Request"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      }
    },
    "/v2/stacks/user/{name}" : {
      "get" : {
        "tags" : [ "v2stacks" ],
        "summary" : "retrieve a private stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getPrivateStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "entry",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v2stacks" ],
        "summary" : "delete private stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deletePrivateStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "forced",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "deleteDependencies",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/validate" : {
      "post" : {
        "tags" : [ "v2stacks" ],
        "summary" : "validate stack",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "validateStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackValidationRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/{id}" : {
      "get" : {
        "tags" : [ "v2stacks" ],
        "summary" : "retrieve stack by id",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "entry",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v2stacks" ],
        "summary" : "delete stack by id",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deleteStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "forced",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "deleteDependencies",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/{id}/status" : {
      "get" : {
        "tags" : [ "v2stacks" ],
        "summary" : "retrieve stack status by stack id",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "statusStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v2/stacks/{name}/manualrepair" : {
      "post" : {
        "tags" : [ "v2stacks" ],
        "summary" : "repair the cluster",
        "description" : "Removing the failed nodes and starting new nodes to substitute them.",
        "operationId" : "repairClusterV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterRepairRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/{name}/request" : {
      "get" : {
        "tags" : [ "v2stacks" ],
        "summary" : "retrieve stack request by stack name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getClusterRequestFromName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackV2Request"
            }
          }
        }
      }
    },
    "/v2/stacks/{name}/retry" : {
      "post" : {
        "tags" : [ "v2stacks" ],
        "summary" : "retry stack and cluster provisioning of failed stack",
        "description" : "Failed or interrupted stack and cluster operations can be retried, after the cause of the failure was eliminated. The operations will continue at the state, where the previous process failed.",
        "operationId" : "retryStack",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/{stackId}/deleteInstances" : {
      "delete" : {
        "tags" : [ "v2stacks" ],
        "summary" : "delete instance resource from stack",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deleteInstancesStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "stackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "instanceIds",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v2/stacks/{stackId}/{instanceId}" : {
      "delete" : {
        "tags" : [ "v2stacks" ],
        "summary" : "delete instance resource from stack",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deleteInstanceStackV2",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "stackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "forced",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/utils/client/{version}" : {
      "get" : {
        "tags" : [ "v3utils" ],
        "summary" : "checks the client version",
        "description" : "",
        "operationId" : "checkClientVersionV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VersionCheckResult"
            }
          }
        }
      }
    },
    "/v3/utils/cloudstoragematrix" : {
      "get" : {
        "tags" : [ "v3utils" ],
        "summary" : "returns supported cloud storage for stack version",
        "description" : "Define stack version at least at patch level eg. 2.6.0",
        "operationId" : "getCloudStorageMatrixV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "stackVersion",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CloudStorageSupportedResponse"
              }
            }
          }
        }
      }
    },
    "/v3/utils/rds-database" : {
      "post" : {
        "tags" : [ "v3utils" ],
        "summary" : "create a database for the service in the RDS if the connection could be created",
        "description" : "",
        "operationId" : "createRDSDatabaseUtilV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RDSBuildRequest"
          }
        }, {
          "name" : "target",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RdsBuildResult"
            }
          }
        }
      }
    },
    "/v3/utils/stackmatrix" : {
      "get" : {
        "tags" : [ "v3utils" ],
        "summary" : "returns default ambari details for distinct HDP and HDF",
        "description" : "",
        "operationId" : "getStackMatrixUtilV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackMatrix"
            }
          }
        }
      }
    },
    "/v3/workspaces" : {
      "get" : {
        "tags" : [ "v3workspaces" ],
        "summary" : "retrieve workspaces",
        "description" : "Workspaces are a way of grouping resources, workspace owners can add users to their workspaces with different permission sets",
        "operationId" : "getWorkspaces",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/WorkspaceResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3workspaces" ],
        "summary" : "create an workspace",
        "description" : "Workspaces are a way of grouping resources, workspace owners can add users to their workspaces with different permission sets",
        "operationId" : "createWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WorkspaceRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkspaceResponse"
            }
          }
        }
      }
    },
    "/v3/workspaces/name/{name}" : {
      "get" : {
        "tags" : [ "v3workspaces" ],
        "summary" : "retrieve an workspace by name",
        "description" : "Workspaces are a way of grouping resources, workspace owners can add users to their workspaces with different permission sets",
        "operationId" : "getWorkspaceByName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkspaceResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v3workspaces" ],
        "summary" : "change users and their permissions in the workspace",
        "description" : "Workspaces are a way of grouping resources, workspace owners can add users to their workspaces with different permission sets",
        "operationId" : "changeWorkspaceUsers",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ChangeWorkspaceUsersJson"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/UserResponseJson"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3workspaces" ],
        "summary" : "delete an workspace by name",
        "description" : "Workspaces are a way of grouping resources, workspace owners can add users to their workspaces with different permission sets",
        "operationId" : "deleteWorkspaceByName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WorkspaceResponse"
            }
          }
        }
      }
    },
    "/v3/workspaces/name/{name}/addUsers" : {
      "put" : {
        "tags" : [ "v3workspaces" ],
        "summary" : "adds users to the given workspace",
        "description" : "Workspaces are a way of grouping resources, workspace owners can add users to their workspaces with different permission sets",
        "operationId" : "addWorkspaceUsers",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ChangeWorkspaceUsersJson"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/UserResponseJson"
              }
            }
          }
        }
      }
    },
    "/v3/workspaces/name/{name}/removeUsers" : {
      "put" : {
        "tags" : [ "v3workspaces" ],
        "summary" : "removes users from the given workspace by their userIds",
        "description" : "Workspaces are a way of grouping resources, workspace owners can add users to their workspaces with different permission sets",
        "operationId" : "removeWorkspaceUsers",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/UserResponseJson"
              }
            }
          }
        }
      }
    },
    "/v3/workspaces/name/{name}/updateUsers" : {
      "put" : {
        "tags" : [ "v3workspaces" ],
        "summary" : "updates the users' permissions in the given workspace",
        "description" : "Workspaces are a way of grouping resources, workspace owners can add users to their workspaces with different permission sets",
        "operationId" : "updateWorkspaceUsers",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ChangeWorkspaceUsersJson"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/UserResponseJson"
              }
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/audits/event/{auditId}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}audits" ],
        "summary" : "Get audit event in workspace",
        "description" : "Audit event operations",
        "operationId" : "getAuditEventByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "auditId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AuditEvent"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/audits/events/zip/{resourceType}/{resourceId}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}audits" ],
        "summary" : "list audit events for the given workspace in zip file",
        "description" : "Audit event operations",
        "operationId" : "getAuditEventsZipInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "resourceType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/audits/events/{resourceType}/{resourceId}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}audits" ],
        "summary" : "list audit events for the given workspace",
        "description" : "Audit event operations",
        "operationId" : "getAuditEventsInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "resourceType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AuditEvent"
              }
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/blueprints" : {
      "get" : {
        "tags" : [ "v3{workspaceId}blueprints" ],
        "summary" : "list blueprints for the given workspace",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "listBlueprintsByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/BlueprintViewResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3{workspaceId}blueprints" ],
        "summary" : "create blueprint in workspace",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "createBlueprintInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BlueprintRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BlueprintResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/blueprints/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}blueprints" ],
        "summary" : "get blueprint by name in workspace",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "getBlueprintInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BlueprintResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}blueprints" ],
        "summary" : "delete blueprint by name in workspace",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "deleteBlueprintInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BlueprintResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/blueprints/{name}/custom-parameters" : {
      "get" : {
        "tags" : [ "v3{workspaceId}blueprints" ],
        "summary" : "returns custom parameters",
        "description" : "",
        "operationId" : "getBlueprintCustomParameters",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ParametersQueryResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/blueprints/{name}/request" : {
      "get" : {
        "tags" : [ "v3{workspaceId}blueprints" ],
        "summary" : "retrieve validation request by blueprint name",
        "description" : "Ambari Blueprints are a declarative definition of a Hadoop cluster. With a Blueprint, you specify a stack, the component layout and the configurations to materialize a Hadoop cluster instance. Hostgroups defined in blueprints can be associated to different templates, thus you can spin up a highly available cluster running on different instance types. This will give you the option to group your Hadoop services based on resource needs (e.g. high I/O, CPU or memory) and create an infrastructure which fits your workload best.",
        "operationId" : "getBlueprintRequestFromName",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BlueprintRequest"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/connectors/accessconfigs" : {
      "post" : {
        "tags" : [ "v3{workspaceId}connectors" ],
        "summary" : "retrive access configs with properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getAccessConfigsForWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformAccessConfigsResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/connectors/disktypes" : {
      "get" : {
        "tags" : [ "v3{workspaceId}connectors" ],
        "summary" : "retrive available disk types",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getDisktypesForWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformDisksJson"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/connectors/encryptionkeys" : {
      "post" : {
        "tags" : [ "v3{workspaceId}connectors" ],
        "summary" : "retrive encryption keys with properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getEncryptionKeysForWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformEncryptionKeysResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/connectors/gateways" : {
      "post" : {
        "tags" : [ "v3{workspaceId}connectors" ],
        "summary" : "retrive gateways with properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getGatewaysCredentialIdForWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformGatewaysResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/connectors/ippools" : {
      "post" : {
        "tags" : [ "v3{workspaceId}connectors" ],
        "summary" : "retrive ip pools with properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getIpPoolsCredentialIdForWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformIpPoolsResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/connectors/networks" : {
      "post" : {
        "tags" : [ "v3{workspaceId}connectors" ],
        "summary" : "retrive network properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getPlatformNetworksForWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformNetworksResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/connectors/recommendation" : {
      "post" : {
        "tags" : [ "v3{workspaceId}connectors" ],
        "summary" : "creates a recommendation that advises cloud resources for the given blueprint",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "createRecommendationForWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RecommendationRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecommendationResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/connectors/regions" : {
      "post" : {
        "tags" : [ "v3{workspaceId}connectors" ],
        "summary" : "retrive regions by type",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getRegionsByCredentialAndWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RegionResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/connectors/securitygroups" : {
      "post" : {
        "tags" : [ "v3{workspaceId}connectors" ],
        "summary" : "retrive securitygroups properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getPlatformSecurityGroupsForWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformSecurityGroupsResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/connectors/sshkeys" : {
      "post" : {
        "tags" : [ "v3{workspaceId}connectors" ],
        "summary" : "retrive sshkeys properties",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getPlatformSShKeysForWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformSshKeysResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/connectors/vmtypes" : {
      "post" : {
        "tags" : [ "v3{workspaceId}connectors" ],
        "summary" : "retrive vmtype properties by credential",
        "description" : "Each cloud provider has it's own specific resources like instance types and disk types. These endpoints are collecting them.",
        "operationId" : "getVmTypesByCredentialAndWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PlatformResourceRequestJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlatformVmtypesResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/credentials" : {
      "get" : {
        "tags" : [ "v3{workspaceId}credentials" ],
        "summary" : "list credentials for the given workspace",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "listCredentialsByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/CredentialResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3{workspaceId}credentials" ],
        "summary" : "create credential in workspace",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "createCredentialInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v3{workspaceId}credentials" ],
        "summary" : "modify public credential resource in workspace",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "putCredentialInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/credentials/interactivelogin" : {
      "post" : {
        "tags" : [ "v3{workspaceId}credentials" ],
        "summary" : "interactive login",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "interactiveLoginCredentialInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CredentialRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/credentials/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}credentials" ],
        "summary" : "get credential by name in workspace",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "getCredentialInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}credentials" ],
        "summary" : "delete credential by name in workspace",
        "description" : "Cloudbreak is launching Hadoop clusters on the user's behalf - on different cloud providers. One key point is that Cloudbreak does not store your Cloud provider account details (such as username, password, keys, private SSL certificates, etc). We work around the concept that Identity and Access Management is fully controlled by you - the end user. The Cloudbreak deployer is purely acting on behalf of the end user - without having access to the user's account.",
        "operationId" : "deleteCredentialInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CredentialResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/events" : {
      "get" : {
        "tags" : [ "v3{workspaceId}events" ],
        "summary" : "retrieve events by timestamp (long)",
        "description" : "Events are used to track stack creation initiated by cloudbreak users. Events are generated by the backend when resources requested by the user become available or unavailable",
        "operationId" : "getEventsInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "since",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CloudbreakEvent"
              }
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/events/struct/zip/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}events" ],
        "summary" : "retrieve events in zip by name",
        "description" : "Events are used to track stack creation initiated by cloudbreak users. Events are generated by the backend when resources requested by the user become available or unavailable",
        "operationId" : "getStructuredEventsZipInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/events/struct/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}events" ],
        "summary" : "retrieve events by name",
        "description" : "Events are used to track stack creation initiated by cloudbreak users. Events are generated by the backend when resources requested by the user become available or unavailable",
        "operationId" : "getStructuredEventsInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StructuredEventContainer"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/events/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}events" ],
        "summary" : "retrieve events by name",
        "description" : "Events are used to track stack creation initiated by cloudbreak users. Events are generated by the backend when resources requested by the user become available or unavailable",
        "operationId" : "getEventsByStackIdInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CloudbreakEvent"
              }
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/filesystems/parameters" : {
      "post" : {
        "tags" : [ "v3{workspaceId}filesystems" ],
        "summary" : "returns filesystem parameters",
        "description" : "",
        "operationId" : "getFileSystemParametersV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StructuredParametersQueryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StructuredParameterQueriesResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/flexsubscriptions" : {
      "get" : {
        "tags" : [ "v3{workspaceId}flexsubscriptions" ],
        "summary" : "list Flex subscriptions for the given workspace",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "listFlexSubscriptionsByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/FlexSubscriptionResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3{workspaceId}flexsubscriptions" ],
        "summary" : "create Flex subscription in workspace",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "createFlexSubscriptionInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FlexSubscriptionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FlexSubscriptionResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/flexsubscriptions/setdefault/{name}" : {
      "put" : {
        "tags" : [ "v3{workspaceId}flexsubscriptions" ],
        "summary" : "sets the workspace default flag on the Flex subscription",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "putDefaultFlexSubscriptionByNameInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/flexsubscriptions/setusedforcontroller/{name}" : {
      "put" : {
        "tags" : [ "v3{workspaceId}flexsubscriptions" ],
        "summary" : "sets the workspace 'used for controller' flag on the Flex subscription",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "putUsedForControllerFlexSubscriptionByNameInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/flexsubscriptions/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}flexsubscriptions" ],
        "summary" : "get Flex subscription by name in workspace",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "getFlexSubscriptionInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FlexSubscriptionResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}flexsubscriptions" ],
        "summary" : "delete Flex subscription by name in workspace",
        "description" : "Flex subscriptions could be configured.",
        "operationId" : "deleteFlexSubscriptionInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FlexSubscriptionResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/imagecatalogs" : {
      "get" : {
        "tags" : [ "v3{workspaceId}imagecatalogs" ],
        "summary" : "list image catalogs for the given workspace",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "listImageCatalogsByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/ImageCatalogResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3{workspaceId}imagecatalogs" ],
        "summary" : "create image catalog in workspace",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "createImageCatalogInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ImageCatalogRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v3{workspaceId}imagecatalogs" ],
        "summary" : "update public (owned) or private Image Catalog by id",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "putPublicImageCatalogInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateImageCatalogRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/imagecatalogs/platform/{platform}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}imagecatalogs" ],
        "summary" : "determines available images for the Cloudbreak version by the given provider and default image catalog url",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "getImagesByProviderInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "platform",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImagesResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/imagecatalogs/setdefault/{name}" : {
      "put" : {
        "tags" : [ "v3{workspaceId}imagecatalogs" ],
        "summary" : "update public (owned) or private Image Catalog by id",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "putSetDefaultImageCatalogByNameInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/imagecatalogs/upgrade/{stackName}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}imagecatalogs" ],
        "summary" : "determines available images for the given stackfrom the default image catalog",
        "description" : "Provides an interface to determine available Virtual Machine images for the given stack.Please consider running sync beforehand",
        "operationId" : "getImagesByStackNameAndDefaultImageCatalogInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImagesResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/imagecatalogs/upgrade/{stackName}/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}imagecatalogs" ],
        "summary" : "determines available images for the given stackfrom the given imagecatalog name",
        "description" : "Provides an interface to determine available Virtual Machine images for the given stack.Please consider running sync beforehand",
        "operationId" : "getImagesByStackNameAndCustomImageCatalogInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "stackName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImagesResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/imagecatalogs/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}imagecatalogs" ],
        "summary" : "get image catalog by name in workspace",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "getImageCatalogInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "withImages",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}imagecatalogs" ],
        "summary" : "delete image catalog by name in workspace",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "deleteImageCatalogInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/imagecatalogs/{name}/platform/{platform}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}imagecatalogs" ],
        "summary" : "determines available images for the Cloudbreak version by the given provider and given image catalog url",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "getImagesByProviderAndCustomImageCatalogInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "platform",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImagesResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/imagecatalogs/{name}/request" : {
      "get" : {
        "tags" : [ "v3{workspaceId}imagecatalogs" ],
        "summary" : "retrieve imagecatalog request by imagecatalog name",
        "description" : "Provides an interface to determine available Virtual Machine images for the given version of Cloudbreak.",
        "operationId" : "getImageCatalogRequestFromNameInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ImageCatalogRequest"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/knoxservices/{blueprintName}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}knoxservices" ],
        "summary" : "list supported exposable services for the specified blueprint",
        "description" : "",
        "operationId" : "listByWorkspaceAndBlueprint",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "blueprintName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExposedServiceResponse"
              }
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/ldapconfigs" : {
      "get" : {
        "tags" : [ "v3{workspaceId}ldapconfigs" ],
        "summary" : "list LDAP configs for the given workspace",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "listLdapsByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/LdapConfigResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3{workspaceId}ldapconfigs" ],
        "summary" : "create LDAP config in workspace",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "createLdapConfigsInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LdapConfigRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapConfigResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/ldapconfigs/testconnect" : {
      "post" : {
        "tags" : [ "v3{workspaceId}ldapconfigs" ],
        "summary" : "test that the connection could be established of an existing or new LDAP config",
        "description" : "",
        "operationId" : "postLdapConnectionTestInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LDAPTestRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapTestResult"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/ldapconfigs/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}ldapconfigs" ],
        "summary" : "get LDAP config by name in workspace",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "getLdapConfigInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}ldapconfigs" ],
        "summary" : "delete LDAP config by name in workspace",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "deleteLdapConfigsInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapConfigResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/ldapconfigs/{name}/request" : {
      "get" : {
        "tags" : [ "v3{workspaceId}ldapconfigs" ],
        "summary" : "get request",
        "description" : "LDAP server integration enables the user to provide a central place to store usernames and passwords for the users of his/her clusters.",
        "operationId" : "getLdapRequestByNameAndWorkspaceId",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LdapConfigRequest"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/mpacks" : {
      "get" : {
        "tags" : [ "v3{workspaceId}mpacks" ],
        "summary" : "list management packs for the given workspace",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "listManagementPacksByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/ManagementPackResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3{workspaceId}mpacks" ],
        "summary" : "create management pack in workspace",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "createManagementPackInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ManagementPackRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManagementPackResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/mpacks/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}mpacks" ],
        "summary" : "get management pack by name in workspace",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "getManagementPackInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManagementPackResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}mpacks" ],
        "summary" : "delete management pack by name in workspace",
        "description" : "An Apache Ambari Management Pack (Mpack) can bundle multiple service definitions, stack definitions, stack add-on service definitions, view definitions services so that releasing these artifacts don’t enforce an Apache Ambari release.",
        "operationId" : "deleteManagementPackInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ManagementPackResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/proxyconfigs" : {
      "get" : {
        "tags" : [ "v3{workspaceId}proxyconfigs" ],
        "summary" : "list proxy configurations for the given workspace",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "listProxyconfigsByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/ProxyConfigResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3{workspaceId}proxyconfigs" ],
        "summary" : "create proxy configuration in workspace",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "createProxyconfigInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProxyConfigRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyConfigResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/proxyconfigs/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}proxyconfigs" ],
        "summary" : "get proxy configuration by name in workspace",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "getProxyconfigInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}proxyconfigs" ],
        "summary" : "delete proxy configuration by name in workspace",
        "description" : "An proxy Configuration describe a connection to an external proxy server which provides internet access cluster members. It's applied for package manager and Ambari too",
        "operationId" : "deleteProxyconfigInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProxyConfigResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/rdsconfigs" : {
      "get" : {
        "tags" : [ "v3{workspaceId}rdsconfigs" ],
        "summary" : "list RDS configs for the given workspace",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "listRdsConfigsByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/RDSConfigResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3{workspaceId}rdsconfigs" ],
        "summary" : "create RDS config in workspace",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "createRdsConfigInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RdsConfig"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RDSConfigResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/rdsconfigs/testconnect" : {
      "post" : {
        "tags" : [ "v3{workspaceId}rdsconfigs" ],
        "summary" : "test RDS connectivity",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "testRdsConnectionInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RdsTestRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RdsTestResult"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/rdsconfigs/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}rdsconfigs" ],
        "summary" : "get RDS config by name in workspace",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "getRdsConfigInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RDSConfigResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}rdsconfigs" ],
        "summary" : "delete RDS config by name in workspace",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "deleteRdsConfigInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RDSConfigResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/rdsconfigs/{name}/request" : {
      "get" : {
        "tags" : [ "v3{workspaceId}rdsconfigs" ],
        "summary" : "get request in workspace",
        "description" : "An RDS Configuration describe a connection to an external Relational Database Service that can be used as the Hive Metastore.",
        "operationId" : "getRdsRequestFromNameInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RdsConfig"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/recipes" : {
      "get" : {
        "tags" : [ "v3{workspaceId}recipes" ],
        "summary" : "list recipes for the given workspace",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "listRecipesByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/RecipeViewResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3{workspaceId}recipes" ],
        "summary" : "create recipe in workspace",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "createRecipeInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RecipeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecipeResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/recipes/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}recipes" ],
        "summary" : "get recipe by name in workspace",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "getRecipeInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecipeResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}recipes" ],
        "summary" : "delete recipe by name in workspace",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "deleteRecipeInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecipeResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/recipes/{name}/request" : {
      "get" : {
        "tags" : [ "v3{workspaceId}recipes" ],
        "summary" : "retrieve recipe request by recipe name",
        "description" : "Recipes are basically script extensions to a cluster that run on a set of nodes before or after the Ambari cluster installation.",
        "operationId" : "getRecipeRequestFromNameInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RecipeRequest"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/smartsensesubscriptions" : {
      "get" : {
        "tags" : [ "v3{workspaceId}smartsensesubscriptions" ],
        "summary" : "list SmartSense subscriptions for the given workspace",
        "description" : "SmartSense subscriptions could be configured.",
        "operationId" : "listSmartSenseSubscriptionsByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/SmartSenseSubscriptionJson"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3{workspaceId}smartsensesubscriptions" ],
        "summary" : "create SmartSense subscription in workspace",
        "description" : "SmartSense subscriptions could be configured.",
        "operationId" : "createSmartSenseSubscriptionInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SmartSenseSubscriptionJson"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SmartSenseSubscriptionJson"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/smartsensesubscriptions/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}smartsensesubscriptions" ],
        "summary" : "get SmartSense subscription by name in workspace",
        "description" : "SmartSense subscriptions could be configured.",
        "operationId" : "getSmartSenseSubscriptionInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SmartSenseSubscriptionJson"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}smartsensesubscriptions" ],
        "summary" : "delete SmartSense subscription by name in workspace",
        "description" : "SmartSense subscriptions could be configured.",
        "operationId" : "deleteSmartSenseSubscriptionInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SmartSenseSubscriptionJson"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks" : {
      "get" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "list stacks for the given workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "listStacksByWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "uniqueItems" : true,
              "items" : {
                "$ref" : "#/definitions/StackViewResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "create stack in workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "createStackInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackV2Request"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/ambari_password/{name}" : {
      "put" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "update stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putpasswordStackV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserNamePassword"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}" : {
      "get" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "get stack by name in workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getStackInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "entry",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "delete stack by name in workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deleteStackInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "forced",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "deleteDependencies",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/blueprint" : {
      "post" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "posts stack for blueprint in workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "postStackForBlueprintV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackV2Request"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GeneratedBlueprintResponse"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/changeImage" : {
      "put" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "checks image in stack by name in workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "changeImageV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackImageChangeRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/cluster" : {
      "put" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "update cluster by stack id",
        "description" : "Clusters are materialised Hadoop services on a given infrastructure. They are built based on a Blueprint (running the components and services specified) and on a configured infrastructure Stack. Once a cluster is created and launched, it can be used the usual way as any Hadoop cluster. We suggest to start with the Cluster's Ambari UI for an overview of your cluster.",
        "operationId" : "putClusterV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateCluster"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "deletes the stack (with kerberos cluster) by name in workspace",
        "description" : "Clusters are materialised Hadoop services on a given infrastructure. They are built based on a Blueprint (running the components and services specified) and on a configured infrastructure Stack. Once a cluster is created and launched, it can be used the usual way as any Hadoop cluster. We suggest to start with the Cluster's Ambari UI for an overview of your cluster.",
        "operationId" : "deleteClusterWithKerberosV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "withStackDelete",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "deleteDependencies",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/instance/{instanceId}" : {
      "delete" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "deletes instance from the stack's cluster in workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "deleteInstanceStackV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "forced",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/maintenance" : {
      "put" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "set maintenance mode for the cluster",
        "description" : "Setting maintenance mode for the cluster in order to be able to update Ambari and/or the Hadoop stack.",
        "operationId" : "setClusterMaintenanceMode",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MaintenanceModeJson"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/manualrepair" : {
      "post" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "repairs the stack by name in workspace",
        "description" : "Removing the failed nodes and starting new nodes to substitute them.",
        "operationId" : "repairClusterV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ClusterRepairRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/reinstall" : {
      "put" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "update stack by name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putreinstallStackV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ReinstallRequestV2"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/request" : {
      "get" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "gets StackRequest by name in workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "getStackRequestFromNameV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StackV2Request"
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/retry" : {
      "post" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "retries the stack by name in workspace",
        "description" : "Failed or interrupted stack and cluster operations can be retried, after the cause of the failure was eliminated. The operations will continue at the state, where the previous process failed.",
        "operationId" : "retryStackV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/scaling" : {
      "put" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "scales the stack by name in workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putscalingStackV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StackScaleRequestV2"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/start" : {
      "put" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "starts the stack by name in workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putstartStackV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/status" : {
      "get" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "retrieve stack status by stack name",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "statusStackV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/stop" : {
      "put" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "stops the stack by name in workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putstopStackV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/stacks/{name}/sync" : {
      "put" : {
        "tags" : [ "v3{workspaceId}stacks" ],
        "summary" : "syncs the stack by name in workspace",
        "description" : "Stacks are template instances - a running cloud infrastructure created based on a template. Stacks are always launched on behalf of a cloud user account. Stacks support a wide range of resources, allowing you to build a highly available, reliable, and scalable infrastructure for your application needs.",
        "operationId" : "putsyncStackV3",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/v3/{workspaceId}/users/profile" : {
      "get" : {
        "tags" : [ "v3{workspaceId}users" ],
        "summary" : "user related profile in workspace",
        "description" : "Users can be invited under an account by the administrator, and all resources (e.g. resources, networks, blueprints, credentials, clusters) can be shared across account users",
        "operationId" : "getUserProfileInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserProfileResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "v3{workspaceId}users" ],
        "summary" : "modify user related profile in workspace",
        "description" : "Users can be invited under an account by the administrator, and all resources (e.g. resources, networks, blueprints, credentials, clusters) can be shared across account users",
        "operationId" : "modifyUserProfileInWorkspace",
        "schemes" : [ "http", "https" ],
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workspaceId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserProfileRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    }
  },
  "definitions" : {
    "SharedService" : {
      "type" : "object",
      "properties" : {
        "sharedCluster" : {
          "type" : "string"
        }
      }
    },
    "instanceGroupsV2" : {
      "type" : "object",
      "required" : [ "group", "nodeCount", "template" ],
      "properties" : {
        "nodeCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of nodes",
          "minimum" : 0.0,
          "maximum" : 100000.0
        },
        "group" : {
          "type" : "string",
          "description" : "name of the instance group"
        },
        "type" : {
          "type" : "string",
          "description" : "type of the instance group",
          "enum" : [ "GATEWAY", "CORE" ]
        },
        "parameters" : {
          "type" : "object",
          "description" : "cloud specific parameters for instance group",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "template" : {
          "description" : "instancegroup related template",
          "$ref" : "#/definitions/TemplateV2Request"
        },
        "securityGroup" : {
          "description" : "instancegroup related securitygroup",
          "$ref" : "#/definitions/SecurityGroupV2Request"
        },
        "recipeNames" : {
          "type" : "array",
          "description" : "referenced recipe names",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "recoveryMode" : {
          "type" : "string",
          "description" : "recovery mode of the hostgroup's nodes",
          "enum" : [ "MANUAL", "AUTO" ]
        }
      }
    },
    "PlacementSettings" : {
      "type" : "object",
      "required" : [ "region" ],
      "properties" : {
        "availabilityZone" : {
          "type" : "string",
          "description" : "availability zone of the stack"
        },
        "region" : {
          "type" : "string",
          "description" : "region of the stack"
        }
      }
    },
    "PlatformNetworkResponse" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "subnets" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "OrchestratorResponse" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "parameters" : {
          "type" : "object",
          "description" : "orchestrator specific parameters, like authentication details",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "apiEndpoint" : {
          "type" : "string",
          "description" : "endpoint for the container orchestration api"
        },
        "type" : {
          "type" : "string",
          "description" : "type of the orchestrator"
        }
      }
    },
    "StackRepoDetailsJson" : {
      "type" : "object",
      "properties" : {
        "stack" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "util" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "PlatformSshKeysResponse" : {
      "type" : "object",
      "properties" : {
        "sshKeys" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/PlatformSshKeyResponse"
            }
          }
        }
      }
    },
    "UserWorkspacePermissionsJson" : {
      "type" : "object",
      "properties" : {
        "permissions" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "userName" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        }
      }
    },
    "ConnectedClusterRequest" : {
      "type" : "object",
      "properties" : {
        "sourceClusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sourceClusterName" : {
          "type" : "string"
        }
      }
    },
    "UpdateImageCatalogRequest" : {
      "type" : "object",
      "required" : [ "id", "name", "url" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "url" : {
          "type" : "string",
          "description" : "custom image catalog's URL",
          "pattern" : "^http[s]?://.*"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        }
      }
    },
    "OrchestratorRequest" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "parameters" : {
          "type" : "object",
          "description" : "orchestrator specific parameters, like authentication details",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "apiEndpoint" : {
          "type" : "string",
          "description" : "endpoint for the container orchestration api"
        },
        "type" : {
          "type" : "string",
          "description" : "type of the orchestrator"
        }
      }
    },
    "HardwareInfoGroupResponse" : {
      "type" : "object",
      "properties" : {
        "recoveryMode" : {
          "type" : "string",
          "description" : "recovery mode of the hostgroup's nodes",
          "enum" : [ "MANUAL", "AUTO" ]
        },
        "name" : {
          "type" : "string"
        },
        "hardwareInfos" : {
          "type" : "array",
          "description" : "Metadata of instances.",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/HardwareInfoResponse"
          }
        }
      }
    },
    "OpenStackParameters" : {
      "type" : "object"
    },
    "AmbariDatabaseTestResult" : {
      "type" : "object",
      "required" : [ "error" ],
      "properties" : {
        "error" : {
          "type" : "string",
          "description" : "result of Ambari database test"
        }
      }
    },
    "Tags" : {
      "type" : "object",
      "properties" : {
        "applicationTags" : {
          "type" : "object",
          "description" : "stack related application tags",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "userDefinedTags" : {
          "type" : "object",
          "description" : "stack related userdefined tags",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "defaultTags" : {
          "type" : "object",
          "description" : "stack related default tags",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "PlatformSecurityGroupResponse" : {
      "type" : "object",
      "properties" : {
        "groupName" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "StackViewResponse" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the stack"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the stack"
        },
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "platformVariant" : {
          "type" : "string",
          "description" : "cloud provider api variant"
        },
        "credential" : {
          "description" : "stack related credential",
          "$ref" : "#/definitions/CredentialViewResponse"
        },
        "hdpVersion" : {
          "type" : "string",
          "description" : "specific version of HDP"
        },
        "cluster" : {
          "description" : "cluster object on stack",
          "$ref" : "#/definitions/ClusterViewResponse"
        },
        "status" : {
          "type" : "string",
          "description" : "status of the stack",
          "enum" : [ "REQUESTED", "CREATE_IN_PROGRESS", "AVAILABLE", "UPDATE_IN_PROGRESS", "UPDATE_REQUESTED", "UPDATE_FAILED", "CREATE_FAILED", "ENABLE_SECURITY_FAILED", "PRE_DELETE_IN_PROGRESS", "DELETE_IN_PROGRESS", "DELETE_FAILED", "DELETE_COMPLETED", "STOPPED", "STOP_REQUESTED", "START_REQUESTED", "STOP_IN_PROGRESS", "START_IN_PROGRESS", "START_FAILED", "STOP_FAILED", "WAIT_FOR_SYNC", "MAINTENANCE_MODE_ENABLED" ]
        },
        "nodeCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "node count of the stack"
        },
        "created" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "creation time of the stack in long"
        },
        "terminated" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "termination completion time of stack in long"
        }
      }
    },
    "RdsTestRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the RDS configuration resource"
        },
        "rdsConfig" : {
          "description" : "unsaved RDS config to be tested by connectivity",
          "$ref" : "#/definitions/RdsConfig"
        }
      }
    },
    "CloudbreakEvent" : {
      "type" : "object",
      "properties" : {
        "eventType" : {
          "type" : "string",
          "description" : "type of the event"
        },
        "eventTimestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "timestamp of the event"
        },
        "eventMessage" : {
          "type" : "string",
          "description" : "message of the event"
        },
        "owner" : {
          "type" : "string",
          "description" : "id of the resource owner that is provided by OAuth provider"
        },
        "account" : {
          "type" : "string",
          "description" : "account id of the resource owner that is provided by OAuth provider"
        },
        "userIdV3" : {
          "type" : "string",
          "description" : "User ID in the new authorization model"
        },
        "cloud" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "region" : {
          "type" : "string",
          "description" : "region of the stack"
        },
        "availabilityZone" : {
          "type" : "string",
          "description" : "availability zone of the stack"
        },
        "blueprintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "blueprint id for the cluster"
        },
        "blueprintName" : {
          "type" : "string",
          "description" : "gathered from blueprintName field from the blueprint JSON"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the cluster"
        },
        "clusterName" : {
          "type" : "string",
          "description" : "name of the cluster"
        },
        "stackId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the stack"
        },
        "stackName" : {
          "type" : "string",
          "description" : "name of the stack"
        },
        "stackStatus" : {
          "type" : "string",
          "description" : "status of the stack",
          "enum" : [ "REQUESTED", "CREATE_IN_PROGRESS", "AVAILABLE", "UPDATE_IN_PROGRESS", "UPDATE_REQUESTED", "UPDATE_FAILED", "CREATE_FAILED", "ENABLE_SECURITY_FAILED", "PRE_DELETE_IN_PROGRESS", "DELETE_IN_PROGRESS", "DELETE_FAILED", "DELETE_COMPLETED", "STOPPED", "STOP_REQUESTED", "START_REQUESTED", "STOP_IN_PROGRESS", "START_IN_PROGRESS", "START_FAILED", "STOP_FAILED", "WAIT_FOR_SYNC", "MAINTENANCE_MODE_ENABLED" ]
        },
        "nodeCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of nodes"
        },
        "instanceGroup" : {
          "type" : "string",
          "description" : "name of the instance group"
        },
        "clusterStatus" : {
          "type" : "string",
          "description" : "status of the cluster",
          "enum" : [ "REQUESTED", "CREATE_IN_PROGRESS", "AVAILABLE", "UPDATE_IN_PROGRESS", "UPDATE_REQUESTED", "UPDATE_FAILED", "CREATE_FAILED", "ENABLE_SECURITY_FAILED", "PRE_DELETE_IN_PROGRESS", "DELETE_IN_PROGRESS", "DELETE_FAILED", "DELETE_COMPLETED", "STOPPED", "STOP_REQUESTED", "START_REQUESTED", "STOP_IN_PROGRESS", "START_IN_PROGRESS", "START_FAILED", "STOP_FAILED", "WAIT_FOR_SYNC", "MAINTENANCE_MODE_ENABLED" ]
        },
        "workspaceId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Workspace ID of the resource"
        }
      }
    },
    "StackDetailsJson" : {
      "type" : "object",
      "properties" : {
        "mpacks" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ManagementPackEntry"
            }
          }
        },
        "version" : {
          "type" : "string"
        },
        "repo" : {
          "$ref" : "#/definitions/StackRepoDetailsJson"
        }
      }
    },
    "RecommendationRequestJson" : {
      "type" : "object",
      "properties" : {
        "credentialId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "credential resource id for the request"
        },
        "credentialName" : {
          "type" : "string",
          "description" : "credential resource name for the request"
        },
        "region" : {
          "type" : "string",
          "description" : "Related region"
        },
        "platformVariant" : {
          "type" : "string",
          "description" : "cloud provider api variant"
        },
        "filters" : {
          "type" : "object",
          "description" : "filter for resources",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "availabilityZone" : {
          "type" : "string",
          "description" : "related availability zone"
        },
        "blueprintName" : {
          "type" : "string",
          "description" : "name that could indentify an existing blueprint"
        },
        "blueprintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id that could indentify an existing blueprint"
        }
      }
    },
    "NetworkResponse" : {
      "type" : "object",
      "required" : [ "cloudPlatform", "name" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "subnetCIDR" : {
          "type" : "string",
          "description" : "the subnet definition of the network in CIDR format"
        },
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "parameters" : {
          "type" : "object",
          "description" : "provider specific parameters of the specified network",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "topologyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the topology the resource belongs to"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "workspace" : {
          "description" : "workspace of the resource",
          "$ref" : "#/definitions/WorkspaceResourceResponse"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource",
          "readOnly" : true
        }
      }
    },
    "RDSBuildRequest" : {
      "type" : "object",
      "required" : [ "clusterName", "rdsConfigRequest" ],
      "properties" : {
        "rdsConfigRequest" : {
          "description" : "rds config request",
          "$ref" : "#/definitions/RdsConfig"
        },
        "clusterName" : {
          "type" : "string",
          "description" : "requested cluster name"
        }
      }
    },
    "StackDescriptor" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string"
        },
        "minAmbari" : {
          "type" : "string"
        },
        "repo" : {
          "$ref" : "#/definitions/StackRepoDetailsJson"
        },
        "mpacks" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ManagementPackEntry"
            }
          }
        },
        "ambari" : {
          "$ref" : "#/definitions/AmbariInfoJson"
        }
      }
    },
    "WorkspaceResponse" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "users" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/UserWorkspacePermissionsJson"
          }
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "DELETED" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        }
      }
    },
    "SupportedExternalDatabaseServiceEntryResponse" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the service"
        },
        "displayName" : {
          "type" : "string",
          "description" : "Display name of the service"
        },
        "databases" : {
          "type" : "array",
          "description" : "Supported database list",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/SupportedDatabaseEntryResponse"
          }
        }
      }
    },
    "PlatformNetworksResponse" : {
      "type" : "object",
      "properties" : {
        "networks" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/PlatformNetworkResponse"
            }
          }
        }
      }
    },
    "CredentialViewResponse" : {
      "type" : "object",
      "required" : [ "cloudPlatform", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "govCloud" : {
          "type" : "boolean",
          "description" : "Flag indicating if the credential type is AWS Gov Cloud",
          "default" : false
        }
      }
    },
    "AmbariRepoDetails" : {
      "type" : "object",
      "required" : [ "baseUrl", "version" ],
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "version of the Ambari"
        },
        "baseUrl" : {
          "type" : "string",
          "description" : "url of the Ambari repository"
        },
        "gpgKeyUrl" : {
          "type" : "string",
          "description" : "gpg key of the Ambari repository"
        }
      }
    },
    "CloudGatewayJson" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "StructuredEventContainer" : {
      "type" : "object",
      "properties" : {
        "flow" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StructuredFlowEvent"
          }
        },
        "rest" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StructuredRestCallEvent"
          }
        },
        "notification" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StructuredNotificationEvent"
          }
        }
      }
    },
    "ConfigsRequest" : {
      "type" : "object",
      "required" : [ "requests" ],
      "properties" : {
        "requests" : {
          "type" : "array",
          "description" : "request object",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/BlueprintParameter"
          }
        }
      }
    },
    "ImageResponse" : {
      "type" : "object",
      "properties" : {
        "date" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "os" : {
          "type" : "string"
        },
        "osType" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "repo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "images" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "stackDetails" : {
          "$ref" : "#/definitions/StackDetailsJson"
        },
        "defaultImage" : {
          "type" : "boolean",
          "default" : false
        },
        "packageVersions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AmbariDatabaseDetails" : {
      "type" : "object",
      "required" : [ "host", "name", "password", "port", "userName", "vendor" ],
      "properties" : {
        "vendor" : {
          "type" : "string",
          "description" : "vendor of the Ambari database",
          "enum" : [ "POSTGRES", "MYSQL", "MARIADB", "MSSQL", "ORACLE11", "ORACLE12", "SQLANYWHERE", "EMBEDDED" ]
        },
        "name" : {
          "type" : "string",
          "description" : "name of the Ambari database",
          "pattern" : "^[^']+$"
        },
        "host" : {
          "type" : "string",
          "description" : "host of the Ambari database",
          "pattern" : "^[a-zA-Z0-9]([a-zA-Z0-9-\\.]+)$"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "port of the Ambari database"
        },
        "userName" : {
          "type" : "string",
          "description" : "user name for the Ambari database",
          "pattern" : "^[^']+$"
        },
        "password" : {
          "type" : "string",
          "description" : "password for the Ambari database",
          "pattern" : "^[^']+$"
        }
      }
    },
    "UserProfileRequest" : {
      "type" : "object",
      "properties" : {
        "credentialName" : {
          "type" : "string"
        },
        "credentialId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "imageCatalogName" : {
          "type" : "string"
        },
        "uiProperties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "GeneratedBlueprintResponse" : {
      "type" : "object",
      "properties" : {
        "ambariBlueprint" : {
          "type" : "string",
          "description" : "ambari blueprint JSON, set this or the url field"
        }
      }
    },
    "ClusterV2Request" : {
      "type" : "object",
      "properties" : {
        "ldapConfigName" : {
          "type" : "string",
          "description" : "LDAP config name for the cluster"
        },
        "rdsConfigNames" : {
          "type" : "array",
          "description" : "RDS configuration names for the cluster",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "proxyName" : {
          "type" : "string",
          "description" : "proxy configuration name for the cluster"
        },
        "cloudStorage" : {
          "description" : "external cloud storage configuration",
          "$ref" : "#/definitions/CloudStorageRequest"
        },
        "executorType" : {
          "type" : "string",
          "description" : "executor type of cluster",
          "enum" : [ "CONTAINER", "DEFAULT" ]
        },
        "ambari" : {
          "description" : "ambari specific requests",
          "$ref" : "#/definitions/AmbariV2Request"
        },
        "sharedService" : {
          "description" : "Shared service request",
          "$ref" : "#/definitions/SharedService"
        }
      }
    },
    "GatewayJson" : {
      "type" : "object",
      "properties" : {
        "enableGateway" : {
          "type" : "boolean",
          "description" : "[DEPRECATED] 'enableGateway' is no longer needed to determine if gateway needs to be launched or not.\nPresence of gateway definition in request is suffucicient. This value is only used in legacy requests, \nwhen 'topologyName' or 'exposedServices' is defined in the root of Gateway, instead of using topologies.\nWhen it is a legacy request and 'enableGateway' is set to 'false', gateway will not be saved and created.",
          "default" : false
        },
        "topologyName" : {
          "type" : "string",
          "description" : "[DEPRECATED] Use the 'topologyName' inside the 'topologies' part of the request.\nIf 'topologyName' is specified, other deprecated properties ('exposedServices' and 'enableGateway') will be used as well, and 'topologies' will be ignored."
        },
        "topologies" : {
          "type" : "array",
          "description" : "Topology definitions of the gateway.",
          "items" : {
            "$ref" : "#/definitions/GatewayTopologyJson"
          }
        },
        "exposedServices" : {
          "type" : "array",
          "description" : "[DEPRECATED] Use the 'exposedServices' inside the 'topologies' part of the request.\nIf 'exposedServices' is specified, other deprecated properties ('topologyName' and 'enableGateway') will be used as well, and 'topologies' will be ignored.",
          "items" : {
            "type" : "string"
          }
        },
        "tokenCert" : {
          "type" : "string",
          "description" : "SSO Provider certificate"
        },
        "gatewayType" : {
          "type" : "string",
          "description" : "Knox gateway type",
          "enum" : [ "CENTRAL", "INDIVIDUAL" ]
        },
        "ssoType" : {
          "type" : "string",
          "description" : "Knox SSO type",
          "enum" : [ "SSO_PROVIDER", "NONE" ]
        }
      }
    },
    "AttachedClusterInfoResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        }
      }
    },
    "RecipeViewResponse" : {
      "type" : "object",
      "required" : [ "name", "recipeType" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "recipeType" : {
          "type" : "string",
          "description" : "type of recipe",
          "enum" : [ "PRE_AMBARI_START", "PRE_TERMINATION", "POST_AMBARI_START", "POST_CLUSTER_INSTALL" ]
        }
      }
    },
    "ClusterViewResponse" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "status" : {
          "type" : "string",
          "description" : "status of the cluster",
          "enum" : [ "REQUESTED", "CREATE_IN_PROGRESS", "AVAILABLE", "UPDATE_IN_PROGRESS", "UPDATE_REQUESTED", "UPDATE_FAILED", "CREATE_FAILED", "ENABLE_SECURITY_FAILED", "PRE_DELETE_IN_PROGRESS", "DELETE_IN_PROGRESS", "DELETE_FAILED", "DELETE_COMPLETED", "STOPPED", "STOP_REQUESTED", "START_REQUESTED", "STOP_IN_PROGRESS", "START_IN_PROGRESS", "START_FAILED", "STOP_FAILED", "WAIT_FOR_SYNC", "MAINTENANCE_MODE_ENABLED" ]
        },
        "secure" : {
          "type" : "boolean",
          "description" : "tells wether the cluster is secured or not",
          "default" : false
        },
        "ambariServerIp" : {
          "type" : "string",
          "description" : "public ambari ip of the stack"
        },
        "blueprint" : {
          "description" : "blueprint for the cluster",
          "$ref" : "#/definitions/BlueprintViewResponse"
        },
        "hostGroups" : {
          "type" : "array",
          "description" : "collection of hostgroups",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/HostGroupViewResponse"
          }
        },
        "sharedServiceResponse" : {
          "description" : "shared service for a specific stack",
          "$ref" : "#/definitions/SharedServiceResponse"
        }
      }
    },
    "StructuredNotificationEvent" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "operation" : {
          "$ref" : "#/definitions/OperationDetails"
        },
        "notificationDetails" : {
          "$ref" : "#/definitions/NotificationDetails"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "PlatformSecurityGroupsResponse" : {
      "type" : "object",
      "properties" : {
        "securityGroups" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/PlatformSecurityGroupResponse"
            }
          }
        }
      }
    },
    "VmTypeJson" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string"
        },
        "vmTypeMetaJson" : {
          "$ref" : "#/definitions/VmTypeMetaJson"
        }
      }
    },
    "ExposedServiceResponse" : {
      "type" : "object",
      "properties" : {
        "serviceName" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "knoxService" : {
          "type" : "string"
        },
        "knoxUrl" : {
          "type" : "string"
        }
      }
    },
    "ManagementPackResponse" : {
      "type" : "object",
      "required" : [ "mpackUrl", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "mpackUrl" : {
          "type" : "string",
          "description" : "url of the ambari management pack",
          "pattern" : "^http[s]?://.*"
        },
        "purge" : {
          "type" : "boolean",
          "description" : "if true, management pack will be installed with '--purge' flag",
          "default" : false
        },
        "purgeList" : {
          "type" : "array",
          "description" : "if provided, management pack will be installed with '--purgeList' option with this values",
          "items" : {
            "type" : "string"
          }
        },
        "force" : {
          "type" : "boolean",
          "description" : "if true, management pack will be installed with '--force' flag",
          "default" : false
        },
        "workspace" : {
          "description" : "workspace of the resource",
          "$ref" : "#/definitions/WorkspaceResourceResponse"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "public" : {
          "type" : "boolean",
          "description" : "resource is visible in account",
          "default" : false
        }
      }
    },
    "AzureParameters" : {
      "type" : "object",
      "properties" : {
        "privateId" : {
          "type" : "string",
          "description" : "private id for azure"
        }
      }
    },
    "FailurePolicyResponse" : {
      "type" : "object",
      "required" : [ "adjustmentType" ],
      "properties" : {
        "threshold" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "threshold of failure policy"
        },
        "adjustmentType" : {
          "type" : "string",
          "description" : "type of  adjustment",
          "enum" : [ "EXACT", "PERCENTAGE", "BEST_EFFORT" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        }
      }
    },
    "HostMetadataViewResponse" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "state" : {
          "type" : "string",
          "description" : "state of the host"
        }
      }
    },
    "AwsEncryption" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "encryption type for vm (DEFAULT|CUSTOM|NONE)"
        },
        "key" : {
          "type" : "string",
          "description" : "encryption key for vm"
        }
      }
    },
    "AmbariStackDetailsResponse" : {
      "type" : "object",
      "properties" : {
        "stack" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "util" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "mpacks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ManagementPackDetails"
          }
        },
        "enableGplRepo" : {
          "type" : "boolean",
          "default" : false
        },
        "verify" : {
          "type" : "boolean",
          "default" : false
        },
        "hdpVersion" : {
          "type" : "string"
        }
      }
    },
    "Constraint" : {
      "type" : "object",
      "required" : [ "hostCount" ],
      "properties" : {
        "instanceGroupName" : {
          "type" : "string",
          "description" : "name of an instance group where the hostgroup will be deployed"
        },
        "constraintTemplateName" : {
          "type" : "string",
          "description" : "name of a constraint template that defines the resource constraints for the hostgroup"
        },
        "hostCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of hosts in the hostgroup"
        }
      }
    },
    "CloudbreakDetailsJson" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "version of the Cloudbreak that provisioned the stack"
        }
      }
    },
    "StructuredParameterQueryResponse" : {
      "type" : "object",
      "properties" : {
        "propertyName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "defaultPath" : {
          "type" : "string"
        },
        "relatedService" : {
          "type" : "string"
        },
        "propertyFile" : {
          "type" : "string"
        },
        "protocol" : {
          "type" : "string"
        },
        "propertyDisplayName" : {
          "type" : "string"
        }
      }
    },
    "PlatformVariantsJson" : {
      "type" : "object",
      "properties" : {
        "platformToVariants" : {
          "type" : "object",
          "description" : "platform variants",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "defaultVariants" : {
          "type" : "object",
          "description" : "default variants",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "SpecialParametersJson" : {
      "type" : "object",
      "properties" : {
        "specialParameters" : {
          "type" : "object",
          "description" : "custom parameters",
          "additionalProperties" : {
            "type" : "boolean"
          }
        },
        "platformSpecificSpecialParameters" : {
          "type" : "object",
          "description" : "platform specific custom parameters",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "VmTypeMetaJson" : {
      "type" : "object",
      "properties" : {
        "configs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VolumeParameterConfigJson"
          }
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "SecurityGroupV2Request" : {
      "type" : "object",
      "properties" : {
        "securityGroupId" : {
          "type" : "string",
          "description" : "Exisiting security group id"
        },
        "securityGroupIds" : {
          "type" : "array",
          "description" : "Exisiting security group ids",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "securityRules" : {
          "type" : "array",
          "description" : "list of security rules that relates to the security group",
          "items" : {
            "$ref" : "#/definitions/SecurityRuleRequest"
          }
        }
      }
    },
    "FileSystem" : {
      "type" : "object",
      "required" : [ "name", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the filesystem"
        },
        "type" : {
          "type" : "string",
          "description" : "type of the filesystem"
        },
        "defaultFs" : {
          "type" : "boolean",
          "description" : "true if fs.defaultFS should point to this filesystem",
          "default" : false
        },
        "adls" : {
          "$ref" : "#/definitions/AdlsCloudStorageParameters"
        },
        "wasb" : {
          "$ref" : "#/definitions/WasbCloudStorageParameters"
        },
        "gcs" : {
          "$ref" : "#/definitions/GcsCloudStorageParameters"
        },
        "s3" : {
          "$ref" : "#/definitions/S3CloudStorageParameters"
        },
        "adlsGen2" : {
          "$ref" : "#/definitions/AdlsGen2CloudStorageParameters"
        },
        "locations" : {
          "type" : "array",
          "description" : "configuration of the filesystem location",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/StorageLocationRequest"
          }
        }
      }
    },
    "PlatformVmtypesResponse" : {
      "type" : "object",
      "properties" : {
        "vmTypes" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VirtualMachinesResponse"
          }
        }
      }
    },
    "UserNamePassword" : {
      "type" : "object",
      "required" : [ "oldPassword", "password", "userName" ],
      "properties" : {
        "userName" : {
          "type" : "string",
          "description" : "new user name in ambari",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "oldPassword" : {
          "type" : "string",
          "description" : "old password in ambari",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "password" : {
          "type" : "string",
          "description" : "new password in ambari",
          "minLength" : 1,
          "maxLength" : 2147483647
        }
      }
    },
    "FailurePolicyRequest" : {
      "type" : "object",
      "required" : [ "adjustmentType" ],
      "properties" : {
        "threshold" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "threshold of failure policy"
        },
        "adjustmentType" : {
          "type" : "string",
          "description" : "type of  adjustment",
          "enum" : [ "EXACT", "PERCENTAGE", "BEST_EFFORT" ]
        }
      }
    },
    "AccountPreferencesResponse" : {
      "type" : "object",
      "properties" : {
        "platforms" : {
          "type" : "string",
          "description" : "list of the cloudplatforms visible on the UI"
        },
        "smartsenseEnabled" : {
          "type" : "boolean",
          "description" : "smartsense enabled on the UI",
          "default" : false
        },
        "defaultTags" : {
          "type" : "object",
          "description" : "default tags for the resources created",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "supportedExternalDatabases" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/SupportedExternalDatabaseServiceEntryResponse"
          }
        },
        "featureSwitches" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "DISABLE_SHOW_CLI", "DISABLE_SHOW_BLUEPRINT" ]
          }
        }
      }
    },
    "RegionResponse" : {
      "type" : "object",
      "properties" : {
        "regions" : {
          "type" : "array",
          "description" : "regions",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "displayNames" : {
          "type" : "object",
          "description" : "regions with displayNames",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "availabilityZones" : {
          "type" : "object",
          "description" : "availability zones",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "defaultRegion" : {
          "type" : "string",
          "description" : "default regions"
        }
      }
    },
    "StackValidationRequest" : {
      "type" : "object",
      "required" : [ "hostGroups", "instanceGroups", "platform" ],
      "properties" : {
        "hostGroups" : {
          "type" : "array",
          "description" : "collection of hostgroups",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/HostGroupRequest"
          }
        },
        "instanceGroups" : {
          "type" : "array",
          "description" : "collection of instance groupst",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/instanceGroups"
          }
        },
        "blueprintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "blueprint id for the cluster"
        },
        "blueprintName" : {
          "type" : "string",
          "description" : "blueprint name for the cluster"
        },
        "blueprint" : {
          "description" : "blueprint for the cluster",
          "$ref" : "#/definitions/BlueprintRequest"
        },
        "networkId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "network resource id for the stack"
        },
        "network" : {
          "description" : "stack related network",
          "$ref" : "#/definitions/NetworkRequest"
        },
        "platform" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "credentialId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "credential resource id for the stack"
        },
        "credentialName" : {
          "type" : "string",
          "description" : "credential resource name for the stack"
        },
        "credential" : {
          "description" : "stack related credential",
          "$ref" : "#/definitions/CredentialRequest"
        },
        "fileSystem" : {
          "description" : "cluster related filesystem",
          "$ref" : "#/definitions/FileSystem"
        }
      }
    },
    "oracle" : {
      "type" : "object",
      "required" : [ "version" ],
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "Version of the Database"
        }
      }
    },
    "ClusterExposedServiceResponse" : {
      "type" : "object",
      "properties" : {
        "serviceName" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "knoxService" : {
          "type" : "string"
        },
        "serviceUrl" : {
          "type" : "string"
        },
        "open" : {
          "type" : "boolean",
          "default" : false
        },
        "mode" : {
          "type" : "string",
          "enum" : [ "SSO_PROVIDER", "NONE" ]
        }
      }
    },
    "CustomContainerRequest" : {
      "type" : "object",
      "properties" : {
        "definitions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "NetworkRequest" : {
      "type" : "object",
      "required" : [ "cloudPlatform", "name" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "subnetCIDR" : {
          "type" : "string",
          "description" : "the subnet definition of the network in CIDR format"
        },
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "parameters" : {
          "type" : "object",
          "description" : "provider specific parameters of the specified network",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "topologyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the topology the resource belongs to"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        }
      }
    },
    "FlexSubscriptionRequest" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "Identifier of Flex subscription.",
          "readOnly" : true,
          "pattern" : "^(FLEX-[0-9]{10}$)"
        },
        "smartSenseSubscriptionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of SmartSense subscription Cloudbreak domain object json representation.",
          "readOnly" : true
        },
        "usedAsDefault" : {
          "type" : "boolean",
          "description" : "true if the flex subscription is the default one",
          "default" : false
        },
        "usedForController" : {
          "type" : "boolean",
          "description" : "true if the flex subscription was used for the controller",
          "default" : false
        }
      }
    },
    "CredentialResponse" : {
      "type" : "object",
      "required" : [ "cloudPlatform", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "parameters" : {
          "type" : "object",
          "description" : "cloud specific parameters for credential",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "topologyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the topology the resource belongs to"
        },
        "workspace" : {
          "$ref" : "#/definitions/WorkspaceResourceResponse"
        },
        "govCloud" : {
          "type" : "boolean",
          "description" : "Flag indicating if the credential type is AWS Gov Cloud",
          "default" : false
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "public" : {
          "type" : "boolean",
          "description" : "resource is visible in account",
          "default" : false
        }
      }
    },
    "GeneralSettings" : {
      "type" : "object",
      "required" : [ "credentialName", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the stack",
          "minLength" : 5,
          "maxLength" : 40,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "credentialName" : {
          "type" : "string",
          "description" : "credential resource name for the stack"
        }
      }
    },
    "BlueprintResponse" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "ambariBlueprint" : {
          "type" : "string",
          "description" : "ambari blueprint JSON, set this or the url field"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "inputs" : {
          "type" : "array",
          "description" : "input parameters of the blueprint",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/BlueprintParameter"
          }
        },
        "tags" : {
          "type" : "object",
          "description" : "user defined tags for blueprint",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "hostGroupCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of host groups"
        },
        "status" : {
          "type" : "string",
          "description" : "status of the blueprint",
          "enum" : [ "DEFAULT", "DEFAULT_DELETED", "USER_MANAGED" ]
        },
        "public" : {
          "type" : "boolean",
          "description" : "resource is visible in account",
          "default" : false
        }
      }
    },
    "RestCallDetails" : {
      "type" : "object",
      "properties" : {
        "restRequest" : {
          "$ref" : "#/definitions/RestRequestDetails"
        },
        "restResponse" : {
          "$ref" : "#/definitions/RestResponseDetails"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "HostGroupViewResponse" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "metadata" : {
          "type" : "array",
          "description" : "metadata of hosts",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/HostMetadataViewResponse"
          }
        }
      }
    },
    "instanceGroups" : {
      "type" : "object",
      "required" : [ "group", "nodeCount" ],
      "properties" : {
        "templateId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "referenced template id"
        },
        "securityGroupId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "security group resource id for the instance group"
        },
        "nodeCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of nodes",
          "minimum" : 0.0,
          "maximum" : 100000.0
        },
        "group" : {
          "type" : "string",
          "description" : "name of the instance group"
        },
        "type" : {
          "type" : "string",
          "description" : "type of the instance group",
          "enum" : [ "GATEWAY", "CORE" ]
        },
        "parameters" : {
          "type" : "object",
          "description" : "cloud specific parameters for instance group",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "template" : {
          "description" : "instancegroup related template",
          "$ref" : "#/definitions/TemplateRequest"
        },
        "securityGroup" : {
          "description" : "instancegroup related securitygroup",
          "$ref" : "#/definitions/SecurityGroupRequest"
        }
      }
    },
    "EncryptionKeyConfigJson" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "UpdateCluster" : {
      "type" : "object",
      "properties" : {
        "hostGroupAdjustment" : {
          "description" : "host group adjustment",
          "$ref" : "#/definitions/HostGroupAdjustment"
        },
        "status" : {
          "type" : "string",
          "description" : "request status",
          "enum" : [ "SYNC", "FULL_SYNC", "REPAIR_FAILED_NODES", "STOPPED", "STARTED" ]
        },
        "userNamePasswordJson" : {
          "description" : "user details",
          "$ref" : "#/definitions/UserNamePassword"
        },
        "blueprintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "blueprint id for the cluster"
        },
        "validateBlueprint" : {
          "type" : "boolean",
          "description" : "blueprint validation",
          "default" : false
        },
        "hostgroups" : {
          "type" : "array",
          "description" : "collection of hostgroups",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/HostGroupRequest"
          }
        },
        "ambariStackDetails" : {
          "description" : "details of the Ambari stack",
          "$ref" : "#/definitions/AmbariStackDetails"
        },
        "kerberosPassword" : {
          "type" : "string",
          "description" : "kerberos admin password",
          "minLength" : 5,
          "maxLength" : 50
        },
        "kerberosPrincipal" : {
          "type" : "string",
          "description" : "kerberos principal"
        }
      }
    },
    "CredentialRequest" : {
      "type" : "object",
      "required" : [ "cloudPlatform", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "parameters" : {
          "type" : "object",
          "description" : "cloud specific parameters for credential",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "topologyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the topology the resource belongs to"
        }
      }
    },
    "UserProfileResponse" : {
      "type" : "object",
      "properties" : {
        "credential" : {
          "$ref" : "#/definitions/CredentialResponse"
        },
        "imageCatalog" : {
          "$ref" : "#/definitions/ImageCatalogShortResponse"
        },
        "owner" : {
          "type" : "string"
        },
        "account" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "uiProperties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "VolumeParameterConfigJson" : {
      "type" : "object",
      "properties" : {
        "volumeParameterType" : {
          "type" : "string"
        },
        "minimumSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maximumSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minimumNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "maximumNumber" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "UpdateGatewayTopologiesJson" : {
      "type" : "object",
      "properties" : {
        "topologies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GatewayTopologyJson"
          }
        }
      }
    },
    "InstanceGroupResponse" : {
      "type" : "object",
      "required" : [ "group", "nodeCount" ],
      "properties" : {
        "templateId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "referenced template id"
        },
        "securityGroupId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "security group resource id for the instance group"
        },
        "nodeCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of nodes",
          "minimum" : 0.0,
          "maximum" : 100000.0
        },
        "group" : {
          "type" : "string",
          "description" : "name of the instance group"
        },
        "type" : {
          "type" : "string",
          "description" : "type of the instance group",
          "enum" : [ "GATEWAY", "CORE" ]
        },
        "parameters" : {
          "type" : "object",
          "description" : "cloud specific parameters for instance group",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "template" : {
          "description" : "instancegroup related template",
          "$ref" : "#/definitions/TemplateResponse"
        },
        "securityGroup" : {
          "description" : "instancegroup related securitygroup",
          "$ref" : "#/definitions/SecurityGroupResponse"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource",
          "readOnly" : true
        },
        "metadata" : {
          "type" : "array",
          "description" : "metadata of instances",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/InstanceMetaData"
          }
        }
      }
    },
    "WasbCloudStorageParameters" : {
      "type" : "object",
      "required" : [ "accountKey", "accountName" ],
      "properties" : {
        "accountKey" : {
          "type" : "string"
        },
        "accountName" : {
          "type" : "string"
        },
        "secure" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "ClusterDetails" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "statusReason" : {
          "type" : "string"
        },
        "secure" : {
          "type" : "boolean",
          "default" : false
        },
        "kerberosType" : {
          "type" : "string"
        },
        "gatewayEnabled" : {
          "type" : "boolean",
          "default" : false
        },
        "gatewayType" : {
          "type" : "string"
        },
        "ssoType" : {
          "type" : "string"
        },
        "ambariVersion" : {
          "type" : "string"
        },
        "clusterType" : {
          "type" : "string"
        },
        "clusterVersion" : {
          "type" : "string"
        },
        "hostGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "externalDatabase" : {
          "type" : "boolean",
          "default" : false
        },
        "databaseType" : {
          "type" : "string"
        },
        "fileSystemType" : {
          "type" : "string"
        },
        "defaultFileSystem" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "StackMatrix" : {
      "type" : "object",
      "properties" : {
        "hdp" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/StackDescriptor"
          }
        },
        "hdf" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/StackDescriptor"
          }
        }
      }
    },
    "LdapValidationRequest" : {
      "type" : "object",
      "required" : [ "bindDn", "bindPassword", "serverHost", "serverPort" ],
      "properties" : {
        "serverHost" : {
          "type" : "string",
          "description" : "public host or IP address of LDAP server"
        },
        "serverPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "port of LDAP server (typically: 389 or 636 for LDAPS)",
          "minimum" : 1.0,
          "maximum" : 65535.0
        },
        "protocol" : {
          "type" : "string",
          "description" : "determines the protocol (LDAP or LDAP over SSL)"
        },
        "bindDn" : {
          "type" : "string",
          "description" : "bind distinguished name for connection test and group search (e.g. cn=admin,dc=example,dc=org)"
        },
        "bindPassword" : {
          "type" : "string",
          "description" : "password for the provided bind DN"
        }
      }
    },
    "ImageCatalogShortResponse" : {
      "type" : "object",
      "required" : [ "id", "name", "publicInAccount", "url", "usedAsDefault" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "url" : {
          "type" : "string",
          "description" : "custom image catalog's URL",
          "pattern" : "^http[s]?://.*"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "publicInAccount" : {
          "type" : "boolean",
          "description" : "resource is visible in account",
          "default" : false
        },
        "usedAsDefault" : {
          "type" : "boolean",
          "description" : "true if image catalog is the default one",
          "default" : false
        }
      }
    },
    "StorageLocationResponse" : {
      "type" : "object",
      "required" : [ "propertyFile", "propertyName", "value" ],
      "properties" : {
        "propertyFile" : {
          "type" : "string"
        },
        "propertyName" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "StorageLocationRequest" : {
      "type" : "object",
      "required" : [ "propertyFile", "propertyName", "value" ],
      "properties" : {
        "propertyFile" : {
          "type" : "string"
        },
        "propertyName" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "PlatformSshKeyResponse" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "LdapTestResult" : {
      "type" : "object",
      "required" : [ "connectionResult" ],
      "properties" : {
        "connectionResult" : {
          "type" : "string",
          "description" : "result of Ldap connection test"
        }
      }
    },
    "RecipeResponse" : {
      "type" : "object",
      "required" : [ "recipeType" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "recipeType" : {
          "type" : "string",
          "description" : "type of recipe",
          "enum" : [ "PRE_AMBARI_START", "PRE_TERMINATION", "POST_AMBARI_START", "POST_CLUSTER_INSTALL" ]
        },
        "content" : {
          "type" : "string",
          "description" : "content of recipe"
        },
        "workspace" : {
          "description" : "workspace of the resource",
          "$ref" : "#/definitions/WorkspaceResourceResponse"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        }
      }
    },
    "SecurityRuleDetails" : {
      "type" : "object",
      "properties" : {
        "cidr" : {
          "type" : "string"
        },
        "ports" : {
          "type" : "string"
        },
        "protocol" : {
          "type" : "string"
        }
      }
    },
    "ConfigsResponse" : {
      "type" : "object",
      "required" : [ "datalakeInputs", "fixInputs", "inputs" ],
      "properties" : {
        "fixInputs" : {
          "type" : "object",
          "description" : "fixinputs object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "datalakeInputs" : {
          "type" : "object",
          "description" : "datalakeinputs object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "inputs" : {
          "type" : "array",
          "description" : "response object",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/BlueprintInput"
          }
        }
      }
    },
    "ManagementPackEntry" : {
      "type" : "object",
      "properties" : {
        "mpackUrl" : {
          "type" : "string"
        }
      }
    },
    "CertificateResponse" : {
      "type" : "object",
      "properties" : {
        "serverCert" : {
          "type" : "array",
          "description" : "server certificate used by the gateway",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "clientKey" : {
          "type" : "array",
          "description" : "client key used by the gateway",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "clientCert" : {
          "type" : "array",
          "description" : "client certificate used by the gateway",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        }
      }
    },
    "ProxyConfigResponse" : {
      "type" : "object",
      "required" : [ "name", "protocol", "serverHost", "serverPort" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the proxy configuration resource",
          "minLength" : 4,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "serverHost" : {
          "type" : "string",
          "description" : "host or IP address of proxy server",
          "minLength" : 1,
          "maxLength" : 255,
          "pattern" : "(^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$)"
        },
        "serverPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "port of proxy server (typically: 3128 or 8080)",
          "minimum" : 1.0,
          "maximum" : 65535.0
        },
        "protocol" : {
          "type" : "string",
          "description" : "determines the protocol (http or https)",
          "pattern" : "^http(s)?$"
        },
        "userName" : {
          "type" : "string",
          "description" : "Username to use for basic authentication"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "proxy configuration id for the cluster"
        },
        "workspace" : {
          "description" : "workspace of the resource",
          "$ref" : "#/definitions/WorkspaceResourceResponse"
        }
      }
    },
    "RecipeRequest" : {
      "type" : "object",
      "required" : [ "recipeType" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "recipeType" : {
          "type" : "string",
          "description" : "type of recipe",
          "enum" : [ "PRE_AMBARI_START", "PRE_TERMINATION", "POST_AMBARI_START", "POST_CLUSTER_INSTALL" ]
        },
        "content" : {
          "type" : "string",
          "description" : "content of recipe"
        }
      }
    },
    "RepoConfigValidationResponse" : {
      "type" : "object",
      "properties" : {
        "ambariBaseUrl" : {
          "type" : "boolean",
          "description" : "Indicates the request's value with the same key is valid and reachable by Cloudbreak or not",
          "default" : false
        },
        "ambariGpgKeyUrl" : {
          "type" : "boolean",
          "description" : "Indicates the request's value with the same key is valid and reachable by Cloudbreak or not",
          "default" : false
        },
        "stackBaseURL" : {
          "type" : "boolean",
          "description" : "Indicates the request's value with the same key is valid and reachable by Cloudbreak or not",
          "default" : false
        },
        "utilsBaseURL" : {
          "type" : "boolean",
          "description" : "Indicates the request's value with the same key is valid and reachable by Cloudbreak or not",
          "default" : false
        },
        "versionDefinitionFileUrl" : {
          "type" : "boolean",
          "description" : "Indicates the request's value with the same key is valid and reachable by Cloudbreak or not",
          "default" : false
        },
        "mpackUrl" : {
          "type" : "boolean",
          "description" : "Indicates the request's value with the same key is valid and reachable by Cloudbreak or not",
          "default" : false
        }
      }
    },
    "ImageSettings" : {
      "type" : "object",
      "properties" : {
        "imageCatalog" : {
          "type" : "string",
          "description" : "custom image catalog URL"
        },
        "imageId" : {
          "type" : "string",
          "description" : "virtual machine image id from ImageCatalog, machines of the cluster will be started from this image"
        },
        "os" : {
          "type" : "string",
          "description" : "os type of the image, this property is only considered when no specific image id is provided"
        }
      }
    },
    "InstanceMetaData" : {
      "type" : "object",
      "properties" : {
        "privateIp" : {
          "type" : "string",
          "description" : "private ip of the insctance"
        },
        "publicIp" : {
          "type" : "string",
          "description" : "public ip of the instance"
        },
        "sshPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "instanceId" : {
          "type" : "string",
          "description" : "id of the instance"
        },
        "ambariServer" : {
          "type" : "boolean",
          "description" : "ambari server address",
          "default" : false
        },
        "discoveryFQDN" : {
          "type" : "string",
          "description" : "the fully qualified domain name of the node in the service discovery cluster"
        },
        "instanceGroup" : {
          "type" : "string",
          "description" : "name of the instance group"
        },
        "instanceStatus" : {
          "type" : "string",
          "description" : "status of the instance",
          "enum" : [ "REQUESTED", "CREATED", "UNREGISTERED", "REGISTERED", "DECOMMISSIONED", "TERMINATED", "DELETED_ON_PROVIDER_SIDE", "FAILED", "STOPPED" ]
        },
        "instanceType" : {
          "type" : "string",
          "description" : "type of the instance",
          "enum" : [ "GATEWAY", "GATEWAY_PRIMARY", "CORE" ]
        }
      }
    },
    "RdsConfig" : {
      "type" : "object",
      "required" : [ "connectionPassword", "connectionURL", "connectionUserName", "name", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the RDS configuration resource"
        },
        "connectionURL" : {
          "type" : "string",
          "description" : "JDBC connection URL in the form of jdbc:<db-type>://<address>:<port>/<db>"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of RDS, aka the service name that will use the RDS like HIVE, DRUID, SUPERSET, RANGER, etc."
        },
        "connectorJarUrl" : {
          "type" : "string",
          "description" : "URL that points to the jar of the connection driver(connector)"
        },
        "connectionUserName" : {
          "type" : "string",
          "description" : "Username to use for the jdbc connection"
        },
        "connectionPassword" : {
          "type" : "string",
          "description" : "Password to use for the jdbc connection"
        },
        "oracle" : {
          "description" : "Oracle specific properties",
          "$ref" : "#/definitions/oracle"
        }
      }
    },
    "BlueprintViewResponse" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 1,
          "maxLength" : 100,
          "pattern" : "^[^;\\/%]*$"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "stackType" : {
          "type" : "string",
          "description" : "The type of the stack: for example HDP or HDF"
        },
        "stackVersion" : {
          "type" : "string",
          "description" : "The version of the stack"
        },
        "hostGroupCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of host groups"
        },
        "status" : {
          "type" : "string",
          "description" : "status of the blueprint",
          "enum" : [ "DEFAULT", "DEFAULT_DELETED", "USER_MANAGED" ]
        },
        "tags" : {
          "type" : "object",
          "description" : "user defined tags for blueprint",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "SecurityGroupRequest" : {
      "type" : "object",
      "required" : [ "cloudPlatform", "name" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "securityGroupId" : {
          "type" : "string",
          "description" : "Exisiting security group id"
        },
        "securityGroupIds" : {
          "type" : "array",
          "description" : "Exisiting security group ids",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "securityRules" : {
          "type" : "array",
          "description" : "list of security rules that relates to the security group",
          "items" : {
            "$ref" : "#/definitions/SecurityRuleRequest"
          }
        }
      }
    },
    "S3CloudStorageParameters" : {
      "type" : "object",
      "required" : [ "instanceProfile" ],
      "properties" : {
        "instanceProfile" : {
          "type" : "string"
        }
      }
    },
    "BlueprintInput" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "propertyValue" : {
          "type" : "string"
        }
      }
    },
    "LdapConfigRequest" : {
      "type" : "object",
      "required" : [ "bindDn", "bindPassword", "name", "serverHost", "serverPort", "userDnPattern", "userSearchBase" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "serverHost" : {
          "type" : "string",
          "description" : "public host or IP address of LDAP server"
        },
        "serverPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "port of LDAP server (typically: 389 or 636 for LDAPS)",
          "minimum" : 1.0,
          "maximum" : 65535.0
        },
        "protocol" : {
          "type" : "string",
          "description" : "determines the protocol (LDAP or LDAP over SSL)"
        },
        "bindDn" : {
          "type" : "string",
          "description" : "bind distinguished name for connection test and group search (e.g. cn=admin,dc=example,dc=org)"
        },
        "userSearchBase" : {
          "type" : "string",
          "description" : "template for user search for authentication (e.g. dc=hadoop,dc=apache,dc=org)"
        },
        "userDnPattern" : {
          "type" : "string",
          "description" : "template for pattern based user search for authentication (e.g. cn={0},dc=hadoop,dc=apache,dc=org)"
        },
        "groupSearchBase" : {
          "type" : "string",
          "description" : "template for group search for authorization (e.g. dc=hadoop,dc=apache,dc=org)"
        },
        "userNameAttribute" : {
          "type" : "string",
          "description" : "attribute name for simplified search filter (e.g. sAMAccountName in case of AD, UID or cn for LDAP)."
        },
        "domain" : {
          "type" : "string",
          "description" : "domain in LDAP server (e.g. ad.seq.com)."
        },
        "directoryType" : {
          "type" : "string",
          "description" : "directory type of server LDAP or AD",
          "enum" : [ "LDAP", "ACTIVE_DIRECTORY" ]
        },
        "userObjectClass" : {
          "type" : "string",
          "description" : "User Object Class (defaults to person)"
        },
        "groupObjectClass" : {
          "type" : "string",
          "description" : "Group Object Class (defaults to groupOfNames)"
        },
        "groupNameAttribute" : {
          "type" : "string",
          "description" : "Group Id Attribute (defaults to cn)"
        },
        "groupMemberAttribute" : {
          "type" : "string",
          "description" : "Group Member Attribute (defaults to member)"
        },
        "adminGroup" : {
          "type" : "string",
          "description" : "LDAP group for administrators"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 1,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "bindPassword" : {
          "type" : "string",
          "description" : "password for the provided bind DN"
        }
      }
    },
    "ClusterRepairRequest" : {
      "type" : "object",
      "required" : [ "hostGroups" ],
      "properties" : {
        "hostGroups" : {
          "type" : "array",
          "description" : "List of hostgroups where the failed nodes will be repaired",
          "items" : {
            "type" : "string"
          }
        },
        "removeOnly" : {
          "type" : "boolean",
          "description" : "If true, the failed nodes will only be removed, otherwise the failed nodes will be removed and new nodes will be started.",
          "default" : false
        }
      }
    },
    "StackResponse" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the stack",
          "minLength" : 5,
          "maxLength" : 40,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "availabilityZone" : {
          "type" : "string",
          "description" : "availability zone of the stack"
        },
        "region" : {
          "type" : "string",
          "description" : "region of the stack"
        },
        "platformVariant" : {
          "type" : "string",
          "description" : "cloud provider api variant"
        },
        "credentialId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "credential resource id for the stack"
        },
        "onFailureAction" : {
          "type" : "string",
          "description" : "action on failure",
          "enum" : [ "ROLLBACK", "DO_NOTHING" ]
        },
        "networkId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "network resource id for the stack"
        },
        "ambariVersion" : {
          "type" : "string",
          "description" : "specific version of ambari"
        },
        "hdpVersion" : {
          "type" : "string",
          "description" : "specific version of HDP"
        },
        "parameters" : {
          "type" : "object",
          "description" : "additional cloud specific parameters for stack",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "customDomain" : {
          "type" : "string",
          "description" : "custom domain name for the nodes in the stack"
        },
        "customHostname" : {
          "type" : "string",
          "description" : "custom hostname for nodes in the stack"
        },
        "clusterNameAsSubdomain" : {
          "type" : "boolean",
          "description" : "using the cluster name to create subdomain",
          "default" : false
        },
        "hostgroupNameAsHostname" : {
          "type" : "boolean",
          "description" : "using the hostgroup names to create hostnames",
          "default" : false
        },
        "applicationTags" : {
          "type" : "object",
          "description" : "stack related application tags",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "userDefinedTags" : {
          "type" : "object",
          "description" : "stack related userdefined tags",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "defaultTags" : {
          "type" : "object",
          "description" : "stack related default tags",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "customInputs" : {
          "type" : "object",
          "description" : "Custom parameters as a json",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the stack"
        },
        "owner" : {
          "type" : "string",
          "description" : "id of the resource owner that is provided by OAuth provider"
        },
        "account" : {
          "type" : "string",
          "description" : "account id of the resource owner that is provided by OAuth provider"
        },
        "status" : {
          "type" : "string",
          "description" : "status of the stack",
          "enum" : [ "REQUESTED", "CREATE_IN_PROGRESS", "AVAILABLE", "UPDATE_IN_PROGRESS", "UPDATE_REQUESTED", "UPDATE_FAILED", "CREATE_FAILED", "ENABLE_SECURITY_FAILED", "PRE_DELETE_IN_PROGRESS", "DELETE_IN_PROGRESS", "DELETE_FAILED", "DELETE_COMPLETED", "STOPPED", "STOP_REQUESTED", "START_REQUESTED", "STOP_IN_PROGRESS", "START_IN_PROGRESS", "START_FAILED", "STOP_FAILED", "WAIT_FOR_SYNC", "MAINTENANCE_MODE_ENABLED" ]
        },
        "cluster" : {
          "description" : "cluster object on stack",
          "$ref" : "#/definitions/ClusterResponse"
        },
        "statusReason" : {
          "type" : "string",
          "description" : "status message of the stack"
        },
        "credential" : {
          "description" : "stack related credential",
          "$ref" : "#/definitions/CredentialResponse"
        },
        "network" : {
          "description" : "stack related network",
          "$ref" : "#/definitions/NetworkResponse"
        },
        "instanceGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InstanceGroupResponse"
          }
        },
        "failurePolicy" : {
          "description" : "failure policy in case of failures",
          "$ref" : "#/definitions/FailurePolicyResponse"
        },
        "orchestrator" : {
          "description" : "the details of the container orchestrator api to use",
          "$ref" : "#/definitions/OrchestratorResponse"
        },
        "created" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "creation time of the stack in long"
        },
        "terminated" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "termination completion time of stack in long"
        },
        "gatewayPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "port of the gateway secured proxy"
        },
        "image" : {
          "description" : "image of the stack",
          "$ref" : "#/definitions/ImageJson"
        },
        "cloudbreakDetails" : {
          "description" : "details of the Cloudbreak that provisioned the stack",
          "$ref" : "#/definitions/CloudbreakDetailsJson"
        },
        "flexSubscription" : {
          "description" : "the related flex subscription",
          "$ref" : "#/definitions/FlexSubscriptionResponse"
        },
        "stackAuthentication" : {
          "description" : "stack related authentication",
          "$ref" : "#/definitions/StackAuthenticationResponse"
        },
        "nodeCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "node count of the stack"
        },
        "hardwareInfoGroups" : {
          "type" : "array",
          "description" : "hardware information where pairing hostmetadata with instancemetadata",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/HardwareInfoGroupResponse"
          }
        },
        "cloudbreakEvents" : {
          "type" : "array",
          "description" : "related events for a cloudbreak stack",
          "items" : {
            "$ref" : "#/definitions/CloudbreakEvent"
          }
        },
        "workspace" : {
          "description" : "workspace of the resource",
          "$ref" : "#/definitions/WorkspaceResourceResponse"
        },
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider",
          "readOnly" : true
        },
        "public" : {
          "type" : "boolean",
          "description" : "resource is visible in account",
          "default" : false
        }
      }
    },
    "CloudStorageRequest" : {
      "type" : "object",
      "properties" : {
        "adls" : {
          "$ref" : "#/definitions/AdlsCloudStorageParameters"
        },
        "wasb" : {
          "$ref" : "#/definitions/WasbCloudStorageParameters"
        },
        "gcs" : {
          "$ref" : "#/definitions/GcsCloudStorageParameters"
        },
        "s3" : {
          "$ref" : "#/definitions/S3CloudStorageParameters"
        },
        "adlsGen2" : {
          "$ref" : "#/definitions/AdlsGen2CloudStorageParameters"
        },
        "locations" : {
          "type" : "array",
          "description" : "cloud storage locations",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/StorageLocationRequest"
          }
        }
      }
    },
    "ManagementPackRequest" : {
      "type" : "object",
      "required" : [ "mpackUrl", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "mpackUrl" : {
          "type" : "string",
          "description" : "url of the ambari management pack",
          "pattern" : "^http[s]?://.*"
        },
        "purge" : {
          "type" : "boolean",
          "description" : "if true, management pack will be installed with '--purge' flag",
          "default" : false
        },
        "purgeList" : {
          "type" : "array",
          "description" : "if provided, management pack will be installed with '--purgeList' option with this values",
          "items" : {
            "type" : "string"
          }
        },
        "force" : {
          "type" : "boolean",
          "description" : "if true, management pack will be installed with '--force' flag",
          "default" : false
        }
      }
    },
    "ClusterRequest" : {
      "type" : "object",
      "required" : [ "name", "password", "userName" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 40,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "blueprintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "blueprint id for the cluster"
        },
        "blueprintName" : {
          "type" : "string",
          "description" : "blueprint name for the cluster"
        },
        "blueprint" : {
          "description" : "blueprint for the cluster",
          "$ref" : "#/definitions/BlueprintRequest"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "hostGroups" : {
          "type" : "array",
          "description" : "collection of hostgroups",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/HostGroupRequest"
          }
        },
        "gateway" : {
          "$ref" : "#/definitions/GatewayJson"
        },
        "enableSecurity" : {
          "type" : "boolean",
          "description" : "enable Kerberos security",
          "default" : false
        },
        "userName" : {
          "type" : "string",
          "description" : "ambari username",
          "minLength" : 5,
          "maxLength" : 15,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "password" : {
          "type" : "string",
          "description" : "ambari password",
          "minLength" : 8,
          "maxLength" : 100,
          "pattern" : "^(.{0,}(([a-zA-Z][^a-zA-Z])|([^a-zA-Z][a-zA-Z])).{1,})|(.{1,}(([a-zA-Z][^a-zA-Z])|([^a-zA-Z][a-zA-Z])).{1,})|(.{1,}(([a-zA-Z][^a-zA-Z])|([^a-zA-Z][a-zA-Z])).{0,})$"
        },
        "kerberos" : {
          "$ref" : "#/definitions/KerberosRequest"
        },
        "ldapConfigId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "LDAP config id for the cluster"
        },
        "ldapConfigName" : {
          "type" : "string",
          "description" : "LDAP config name for the cluster"
        },
        "ldapConfig" : {
          "description" : "LDAP config for the cluster",
          "$ref" : "#/definitions/LdapConfigRequest"
        },
        "validateBlueprint" : {
          "type" : "boolean",
          "description" : "blueprint validation",
          "default" : false
        },
        "validateRepositories" : {
          "type" : "boolean",
          "description" : "ambari and stack repository validation",
          "default" : false
        },
        "ambariStackDetails" : {
          "description" : "details of the Ambari stack",
          "$ref" : "#/definitions/AmbariStackDetails"
        },
        "ambariRepoDetailsJson" : {
          "description" : "details of the Ambari package repository",
          "$ref" : "#/definitions/AmbariRepoDetails"
        },
        "rdsConfigIds" : {
          "type" : "array",
          "description" : "RDS configuration ids for the cluster",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "rdsConfigNames" : {
          "type" : "array",
          "description" : "RDS configuration names for the cluster",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "ambariDatabaseDetails" : {
          "description" : "[DEPRECATED] use RdsConfig instead! details of the external Ambari database",
          "$ref" : "#/definitions/AmbariDatabaseDetails"
        },
        "rdsConfigJsons" : {
          "type" : "array",
          "description" : "details of the external database for Hadoop components",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/RdsConfig"
          }
        },
        "fileSystem" : {
          "description" : "external file system configuration",
          "$ref" : "#/definitions/FileSystem"
        },
        "configStrategy" : {
          "type" : "string",
          "description" : "config recommendation strategy",
          "enum" : [ "NEVER_APPLY", "ONLY_STACK_DEFAULTS_APPLY", "ALWAYS_APPLY", "ALWAYS_APPLY_DONT_OVERRIDE_CUSTOM_VALUES" ]
        },
        "blueprintInputs" : {
          "type" : "array",
          "description" : "blueprint inputs in the cluster",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/BlueprintInput"
          }
        },
        "blueprintCustomProperties" : {
          "type" : "string",
          "description" : "blueprint custom properties"
        },
        "customContainer" : {
          "description" : "custom containers",
          "$ref" : "#/definitions/CustomContainerRequest"
        },
        "customQueue" : {
          "type" : "string",
          "description" : "custom queue for yarn orchestrator"
        },
        "executorType" : {
          "type" : "string",
          "description" : "executor type of cluster",
          "enum" : [ "CONTAINER", "DEFAULT" ]
        },
        "connectedCluster" : {
          "description" : "cluster can connect to a datalake you can define the parameters here",
          "$ref" : "#/definitions/ConnectedClusterRequest"
        },
        "ambariSecurityMasterKey" : {
          "type" : "string",
          "description" : "a master key for encrypting the passwords in Ambari",
          "minLength" : 5,
          "maxLength" : 100
        },
        "proxyName" : {
          "type" : "string",
          "description" : "proxy configuration name for the cluster"
        }
      }
    },
    "PlatformRegionsJson" : {
      "type" : "object",
      "properties" : {
        "regions" : {
          "type" : "object",
          "description" : "regions",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "displayNames" : {
          "type" : "object",
          "description" : "regions with displayNames",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "availabilityZones" : {
          "type" : "object",
          "description" : "availability zones",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "defaultRegions" : {
          "type" : "object",
          "description" : "default regions",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "SecurityGroupResponse" : {
      "type" : "object",
      "required" : [ "cloudPlatform" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "securityGroupId" : {
          "type" : "string",
          "description" : "Exisiting security group id"
        },
        "securityGroupIds" : {
          "type" : "array",
          "description" : "Exisiting security group ids",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "securityRules" : {
          "type" : "array",
          "description" : "list of security rules that relates to the security group",
          "items" : {
            "$ref" : "#/definitions/SecurityRuleResponse"
          }
        },
        "workspace" : {
          "description" : "workspace of the resource",
          "$ref" : "#/definitions/WorkspaceResourceResponse"
        }
      }
    },
    "StackDetails" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "availabilityZone" : {
          "type" : "string"
        },
        "cloudPlatform" : {
          "type" : "string"
        },
        "platformVariant" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "detailedStatus" : {
          "type" : "string"
        },
        "statusReason" : {
          "type" : "string"
        },
        "cloudbreakVersion" : {
          "type" : "string"
        },
        "imageIdentifier" : {
          "type" : "string"
        },
        "ambariVersion" : {
          "type" : "string"
        },
        "clusterType" : {
          "type" : "string"
        },
        "clusterVersion" : {
          "type" : "string"
        },
        "prewarmedImage" : {
          "type" : "boolean",
          "default" : false
        },
        "existingNetwork" : {
          "type" : "boolean",
          "default" : false
        },
        "existingSubnet" : {
          "type" : "boolean",
          "default" : false
        },
        "instanceGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InstanceGroupDetails"
          }
        }
      }
    },
    "ProxyConfigRequest" : {
      "type" : "object",
      "required" : [ "name", "protocol", "serverHost", "serverPort" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the proxy configuration resource",
          "minLength" : 4,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "serverHost" : {
          "type" : "string",
          "description" : "host or IP address of proxy server",
          "minLength" : 1,
          "maxLength" : 255,
          "pattern" : "(^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$)"
        },
        "serverPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "port of proxy server (typically: 3128 or 8080)",
          "minimum" : 1.0,
          "maximum" : 65535.0
        },
        "protocol" : {
          "type" : "string",
          "description" : "determines the protocol (http or https)",
          "pattern" : "^http(s)?$"
        },
        "userName" : {
          "type" : "string",
          "description" : "Username to use for basic authentication"
        },
        "password" : {
          "type" : "string",
          "description" : "Password to use for basic authentication"
        }
      }
    },
    "HardwareInfoResponse" : {
      "type" : "object",
      "required" : [ "groupName", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "groupName" : {
          "type" : "string",
          "description" : "name of the host group"
        },
        "state" : {
          "type" : "string",
          "description" : "state of the host"
        },
        "privateIp" : {
          "type" : "string",
          "description" : "private ip of the insctance"
        },
        "publicIp" : {
          "type" : "string",
          "description" : "public ip of the instance"
        },
        "sshPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "instanceId" : {
          "type" : "string",
          "description" : "id of the instance"
        },
        "ambariServer" : {
          "type" : "boolean",
          "description" : "ambari server address",
          "default" : false
        },
        "discoveryFQDN" : {
          "type" : "string",
          "description" : "the fully qualified domain name of the node in the service discovery cluster"
        },
        "instanceGroup" : {
          "type" : "string",
          "description" : "name of the instance group"
        },
        "instanceStatus" : {
          "type" : "string",
          "description" : "status of the instance",
          "enum" : [ "REQUESTED", "CREATED", "UNREGISTERED", "REGISTERED", "DECOMMISSIONED", "TERMINATED", "DELETED_ON_PROVIDER_SIDE", "FAILED", "STOPPED" ]
        },
        "instanceMetadataType" : {
          "type" : "string",
          "description" : "type of the instance",
          "enum" : [ "GATEWAY", "GATEWAY_PRIMARY", "CORE" ]
        },
        "imageName" : {
          "type" : "string"
        },
        "os" : {
          "type" : "string"
        },
        "osType" : {
          "type" : "string"
        },
        "imageCatalogUrl" : {
          "type" : "string"
        },
        "imageId" : {
          "type" : "string"
        },
        "imageCatalogName" : {
          "type" : "string"
        },
        "packageVersions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "template" : {
          "description" : "instancegroup related template",
          "$ref" : "#/definitions/TemplateResponse"
        }
      }
    },
    "ReinstallRequestV2" : {
      "type" : "object",
      "required" : [ "blueprintName" ],
      "properties" : {
        "instanceGroups" : {
          "type" : "array",
          "description" : "collection of instance groupst",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/instanceGroupsV2"
          }
        },
        "ambariStackDetails" : {
          "description" : "details of the Ambari stack",
          "$ref" : "#/definitions/AmbariStackDetails"
        },
        "blueprintName" : {
          "type" : "string",
          "description" : "blueprint name for the cluster"
        },
        "kerberosPassword" : {
          "type" : "string",
          "description" : "kerberos admin password",
          "minLength" : 5,
          "maxLength" : 50
        },
        "kerberosPrincipal" : {
          "type" : "string",
          "description" : "kerberos principal"
        }
      }
    },
    "AutoscaleStackResponse" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "stackId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the stack"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the stack",
          "minLength" : 5,
          "maxLength" : 40,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "owner" : {
          "type" : "string",
          "description" : "id of the resource owner that is provided by OAuth provider"
        },
        "account" : {
          "type" : "string",
          "description" : "account id of the resource owner that is provided by OAuth provider"
        },
        "gatewayPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "port of the gateway secured proxy"
        },
        "ambariServerIp" : {
          "type" : "string",
          "description" : "public ambari ip of the stack"
        },
        "userName" : {
          "type" : "string",
          "description" : "ambari username"
        },
        "password" : {
          "type" : "string",
          "description" : "ambari password"
        },
        "status" : {
          "type" : "string",
          "description" : "status of the stack",
          "enum" : [ "REQUESTED", "CREATE_IN_PROGRESS", "AVAILABLE", "UPDATE_IN_PROGRESS", "UPDATE_REQUESTED", "UPDATE_FAILED", "CREATE_FAILED", "ENABLE_SECURITY_FAILED", "PRE_DELETE_IN_PROGRESS", "DELETE_IN_PROGRESS", "DELETE_FAILED", "DELETE_COMPLETED", "STOPPED", "STOP_REQUESTED", "START_REQUESTED", "STOP_IN_PROGRESS", "START_IN_PROGRESS", "START_FAILED", "STOP_FAILED", "WAIT_FOR_SYNC", "MAINTENANCE_MODE_ENABLED" ]
        },
        "clusterStatus" : {
          "type" : "string",
          "description" : "status of the cluster",
          "enum" : [ "REQUESTED", "CREATE_IN_PROGRESS", "AVAILABLE", "UPDATE_IN_PROGRESS", "UPDATE_REQUESTED", "UPDATE_FAILED", "CREATE_FAILED", "ENABLE_SECURITY_FAILED", "PRE_DELETE_IN_PROGRESS", "DELETE_IN_PROGRESS", "DELETE_FAILED", "DELETE_COMPLETED", "STOPPED", "STOP_REQUESTED", "START_REQUESTED", "STOP_IN_PROGRESS", "START_IN_PROGRESS", "START_FAILED", "STOP_FAILED", "WAIT_FOR_SYNC", "MAINTENANCE_MODE_ENABLED" ]
        },
        "created" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "creation time of the stack in long"
        }
      }
    },
    "AwsParameters" : {
      "type" : "object",
      "properties" : {
        "spotPrice" : {
          "type" : "number",
          "format" : "double",
          "description" : "spot price for aws"
        },
        "encryption" : {
          "description" : "encryption for vm",
          "$ref" : "#/definitions/AwsEncryption"
        },
        "encrypted" : {
          "type" : "boolean",
          "description" : "should encrypt the vm",
          "default" : false
        }
      }
    },
    "IpPoolJson" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "StructuredFlowEvent" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "operation" : {
          "$ref" : "#/definitions/OperationDetails"
        },
        "flow" : {
          "$ref" : "#/definitions/FlowDetails"
        },
        "stack" : {
          "$ref" : "#/definitions/StackDetails"
        },
        "cluster" : {
          "$ref" : "#/definitions/ClusterDetails"
        },
        "blueprint" : {
          "$ref" : "#/definitions/BlueprintDetails"
        },
        "exception" : {
          "type" : "string"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "PlatformIpPoolsResponse" : {
      "type" : "object",
      "properties" : {
        "ippools" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/IpPoolJson"
            }
          }
        }
      }
    },
    "NotificationDetails" : {
      "type" : "object",
      "properties" : {
        "notificationType" : {
          "type" : "string"
        },
        "notification" : {
          "type" : "string"
        },
        "cloud" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "availabiltyZone" : {
          "type" : "string"
        },
        "stackId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "stackName" : {
          "type" : "string"
        },
        "stackStatus" : {
          "type" : "string"
        },
        "nodeCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "instanceGroup" : {
          "type" : "string"
        },
        "clusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "clusterName" : {
          "type" : "string"
        },
        "clusterStatus" : {
          "type" : "string"
        },
        "blueprintName" : {
          "type" : "string"
        },
        "blueprintId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "AmbariInfoJson" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string"
        },
        "repo" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/AmbariRepoDetails"
          }
        }
      }
    },
    "YarnParameters" : {
      "type" : "object"
    },
    "TemplateRequest" : {
      "type" : "object",
      "required" : [ "cloudPlatform", "name" ],
      "properties" : {
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "parameters" : {
          "type" : "object",
          "description" : "cloud specific parameters for template",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "secretParameters" : {
          "type" : "object",
          "description" : "cloud specific secret parameters for template",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "volumeType" : {
          "type" : "string",
          "description" : "type of the volumes"
        },
        "rootVolumeSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "size of the root volume"
        },
        "instanceType" : {
          "type" : "string",
          "description" : "type of the instance"
        },
        "customInstanceType" : {
          "description" : "custom instancetype definition",
          "$ref" : "#/definitions/CustomInstanceType"
        },
        "topologyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the topology the resource belongs to"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "volumeCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of volumes"
        },
        "volumeSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "size of volumes"
        }
      }
    },
    "BlueprintDetails" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "blueprintName" : {
          "type" : "string"
        },
        "blueprintJson" : {
          "type" : "string"
        }
      }
    },
    "CustomInstanceType" : {
      "type" : "object",
      "properties" : {
        "memory" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cpus" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "StackRequest" : {
      "type" : "object",
      "required" : [ "instanceGroups", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the stack",
          "minLength" : 5,
          "maxLength" : 40,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "availabilityZone" : {
          "type" : "string",
          "description" : "availability zone of the stack"
        },
        "region" : {
          "type" : "string",
          "description" : "region of the stack"
        },
        "platformVariant" : {
          "type" : "string",
          "description" : "cloud provider api variant"
        },
        "credentialId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "credential resource id for the stack"
        },
        "onFailureAction" : {
          "type" : "string",
          "description" : "action on failure",
          "enum" : [ "ROLLBACK", "DO_NOTHING" ]
        },
        "networkId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "network resource id for the stack"
        },
        "ambariVersion" : {
          "type" : "string",
          "description" : "specific version of ambari"
        },
        "hdpVersion" : {
          "type" : "string",
          "description" : "specific version of HDP"
        },
        "parameters" : {
          "type" : "object",
          "description" : "additional cloud specific parameters for stack",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "customDomain" : {
          "type" : "string",
          "description" : "custom domain name for the nodes in the stack"
        },
        "customHostname" : {
          "type" : "string",
          "description" : "custom hostname for nodes in the stack"
        },
        "clusterNameAsSubdomain" : {
          "type" : "boolean",
          "description" : "using the cluster name to create subdomain",
          "default" : false
        },
        "hostgroupNameAsHostname" : {
          "type" : "boolean",
          "description" : "using the hostgroup names to create hostnames",
          "default" : false
        },
        "applicationTags" : {
          "type" : "object",
          "description" : "stack related application tags",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "userDefinedTags" : {
          "type" : "object",
          "description" : "stack related userdefined tags",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "defaultTags" : {
          "type" : "object",
          "description" : "stack related default tags",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "customInputs" : {
          "type" : "object",
          "description" : "Custom parameters as a json",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "orchestrator" : {
          "description" : "the details of the container orchestrator api to use",
          "$ref" : "#/definitions/OrchestratorRequest"
        },
        "instanceGroups" : {
          "type" : "array",
          "description" : "collection of instance groupst",
          "items" : {
            "$ref" : "#/definitions/instanceGroups"
          }
        },
        "failurePolicy" : {
          "description" : "failure policy in case of failures",
          "$ref" : "#/definitions/FailurePolicyRequest"
        },
        "credential" : {
          "description" : "stack related credential",
          "$ref" : "#/definitions/CredentialRequest"
        },
        "stackAuthentication" : {
          "description" : "stack related authentication",
          "$ref" : "#/definitions/StackAuthentication"
        },
        "network" : {
          "description" : "stack related network",
          "$ref" : "#/definitions/NetworkRequest"
        },
        "imageCatalog" : {
          "type" : "string",
          "description" : "custom image catalog URL"
        },
        "imageId" : {
          "type" : "string",
          "description" : "virtual machine image id from ImageCatalog, machines of the cluster will be started from this image"
        },
        "os" : {
          "type" : "string",
          "description" : "os type of the image, this property is only considered when no specific image id is provided"
        },
        "flexId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the related flex subscription"
        },
        "gatewayPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "port of the gateway secured proxy"
        },
        "credentialSource" : {
          "description" : "source credential object for cloning",
          "$ref" : "#/definitions/CredentialSourceRequest"
        },
        "clusterToAttach" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Shared service request"
        },
        "credentialName" : {
          "type" : "string",
          "description" : "credential resource name for the stack"
        },
        "clusterRequest" : {
          "description" : "cluster request object on stack",
          "$ref" : "#/definitions/ClusterRequest"
        },
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider",
          "readOnly" : true
        }
      }
    },
    "StructuredRestCallEvent" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "operation" : {
          "$ref" : "#/definitions/OperationDetails"
        },
        "restCall" : {
          "$ref" : "#/definitions/RestCallDetails"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "ParametersQueryResponse" : {
      "type" : "object",
      "required" : [ "custom" ],
      "properties" : {
        "custom" : {
          "type" : "object",
          "description" : "Custom parameters as a json",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AmbariStackDetails" : {
      "type" : "object",
      "properties" : {
        "stack" : {
          "type" : "string",
          "description" : "name of the stack, like HDP"
        },
        "version" : {
          "type" : "string",
          "description" : "version of the stack",
          "pattern" : "(^[0-9]+\\.[0-9]+$)"
        },
        "os" : {
          "type" : "string",
          "description" : "operating system for the stack, like redhat6"
        },
        "osType" : {
          "type" : "string",
          "description" : "operating system type for the stack, like centos6"
        },
        "stackRepoId" : {
          "type" : "string",
          "description" : "id of the stack repository"
        },
        "stackBaseURL" : {
          "type" : "string",
          "description" : "url of the stack repository"
        },
        "utilsRepoId" : {
          "type" : "string",
          "description" : "id of the stack utils repository"
        },
        "utilsBaseURL" : {
          "type" : "string",
          "description" : "url of the stack utils repository"
        },
        "enableGplRepo" : {
          "type" : "boolean",
          "description" : "enable gpl repository",
          "default" : false
        },
        "verify" : {
          "type" : "boolean",
          "description" : "whether to verify or not the repo url",
          "default" : false
        },
        "repositoryVersion" : {
          "type" : "string",
          "description" : "version of the repository for VDF file creation in Ambari"
        },
        "versionDefinitionFileUrl" : {
          "type" : "string",
          "description" : "local path on the Ambari server or URL that point to the desired VDF file"
        },
        "mpackUrl" : {
          "type" : "string",
          "description" : "url the MPACK that needs to be installed before HDF installation"
        },
        "mpacks" : {
          "type" : "array",
          "description" : "Management packs which are needed for the HDP / HDF clusters",
          "items" : {
            "$ref" : "#/definitions/ManagementPackDetails"
          }
        },
        "gpgKeyUrl" : {
          "type" : "string",
          "description" : "gpg key of the Ambari repository"
        }
      }
    },
    "TagSpecificationsJson" : {
      "type" : "object",
      "properties" : {
        "specifications" : {
          "type" : "object",
          "description" : "tag specifications",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "StackScaleRequestV2" : {
      "type" : "object",
      "required" : [ "desiredCount", "group" ],
      "properties" : {
        "group" : {
          "type" : "string",
          "description" : "name of the instance group"
        },
        "desiredCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "scaling adjustment of the instance groups"
        }
      }
    },
    "RdsBuildResult" : {
      "type" : "object",
      "required" : [ "results" ],
      "properties" : {
        "results" : {
          "type" : "object",
          "description" : "name of the created dbs",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "VersionCheckResult" : {
      "type" : "object",
      "properties" : {
        "versionCheckOk" : {
          "type" : "boolean",
          "default" : false
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "CustomContainerResponse" : {
      "type" : "object",
      "properties" : {
        "definitions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "DiskResponse" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        }
      }
    },
    "Id" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        }
      }
    },
    "HostGroupResponse" : {
      "type" : "object",
      "required" : [ "constraint", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "constraint" : {
          "description" : "instance group or resource constraint for a hostgroup",
          "$ref" : "#/definitions/Constraint"
        },
        "recipeIds" : {
          "type" : "array",
          "description" : "referenced recipe ids",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "recoveryMode" : {
          "type" : "string",
          "description" : "recovery mode of the hostgroup's nodes",
          "enum" : [ "MANUAL", "AUTO" ]
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "recipes" : {
          "type" : "array",
          "description" : "referenced recipes",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/RecipeResponse"
          }
        },
        "extendedRecipes" : {
          "type" : "array",
          "description" : "referenced extended recipes",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "metadata" : {
          "type" : "array",
          "description" : "metadata of hosts",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/HostMetadata"
          }
        }
      }
    },
    "LdapConfigResponse" : {
      "type" : "object",
      "required" : [ "bindDn", "name", "serverHost", "serverPort", "userDnPattern", "userSearchBase" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "serverHost" : {
          "type" : "string",
          "description" : "public host or IP address of LDAP server"
        },
        "serverPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "port of LDAP server (typically: 389 or 636 for LDAPS)",
          "minimum" : 1.0,
          "maximum" : 65535.0
        },
        "protocol" : {
          "type" : "string",
          "description" : "determines the protocol (LDAP or LDAP over SSL)"
        },
        "bindDn" : {
          "type" : "string",
          "description" : "bind distinguished name for connection test and group search (e.g. cn=admin,dc=example,dc=org)"
        },
        "userSearchBase" : {
          "type" : "string",
          "description" : "template for user search for authentication (e.g. dc=hadoop,dc=apache,dc=org)"
        },
        "userDnPattern" : {
          "type" : "string",
          "description" : "template for pattern based user search for authentication (e.g. cn={0},dc=hadoop,dc=apache,dc=org)"
        },
        "groupSearchBase" : {
          "type" : "string",
          "description" : "template for group search for authorization (e.g. dc=hadoop,dc=apache,dc=org)"
        },
        "userNameAttribute" : {
          "type" : "string",
          "description" : "attribute name for simplified search filter (e.g. sAMAccountName in case of AD, UID or cn for LDAP)."
        },
        "domain" : {
          "type" : "string",
          "description" : "domain in LDAP server (e.g. ad.seq.com)."
        },
        "directoryType" : {
          "type" : "string",
          "description" : "directory type of server LDAP or AD",
          "enum" : [ "LDAP", "ACTIVE_DIRECTORY" ]
        },
        "userObjectClass" : {
          "type" : "string",
          "description" : "User Object Class (defaults to person)"
        },
        "groupObjectClass" : {
          "type" : "string",
          "description" : "Group Object Class (defaults to groupOfNames)"
        },
        "groupNameAttribute" : {
          "type" : "string",
          "description" : "Group Id Attribute (defaults to cn)"
        },
        "groupMemberAttribute" : {
          "type" : "string",
          "description" : "Group Member Attribute (defaults to member)"
        },
        "adminGroup" : {
          "type" : "string",
          "description" : "LDAP group for administrators"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "public" : {
          "type" : "boolean",
          "description" : "resource is visible in account",
          "default" : false
        }
      }
    },
    "UserResponseJson" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "username" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        }
      }
    },
    "HostMetadata" : {
      "type" : "object",
      "required" : [ "groupName", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "groupName" : {
          "type" : "string",
          "description" : "name of the host group"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "state" : {
          "type" : "string",
          "description" : "state of the host"
        }
      }
    },
    "ParametersQueryRequest" : {
      "type" : "object",
      "required" : [ "blueprintName" ],
      "properties" : {
        "blueprintName" : {
          "type" : "string",
          "description" : "gathered from blueprintName field from the blueprint JSON"
        }
      }
    },
    "AdlsGen2CloudStorageParameters" : {
      "type" : "object",
      "required" : [ "accountKey", "accountName" ],
      "properties" : {
        "accountKey" : {
          "type" : "string"
        },
        "accountName" : {
          "type" : "string"
        }
      }
    },
    "AccountPreferencesRequest" : {
      "type" : "object",
      "properties" : {
        "platforms" : {
          "type" : "string",
          "description" : "list of the cloudplatforms visible on the UI"
        },
        "smartsenseEnabled" : {
          "type" : "boolean",
          "description" : "smartsense enabled on the UI",
          "default" : false
        },
        "defaultTags" : {
          "type" : "object",
          "description" : "default tags for the resources created",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "VirtualMachinesResponse" : {
      "type" : "object",
      "properties" : {
        "virtualMachines" : {
          "type" : "array",
          "description" : "virtual machines",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/VmTypeJson"
          }
        },
        "defaultVirtualMachine" : {
          "description" : "default virtual machines",
          "$ref" : "#/definitions/VmTypeJson"
        }
      }
    },
    "BlueprintParameter" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "referenceConfiguration" : {
          "type" : "string"
        }
      }
    },
    "SecurityRuleRequest" : {
      "type" : "object",
      "required" : [ "ports", "protocol", "subnet" ],
      "properties" : {
        "subnet" : {
          "type" : "string",
          "description" : "definition of allowed subnet in CIDR format"
        },
        "ports" : {
          "type" : "string",
          "description" : "comma separated list of accessible ports",
          "pattern" : "^[1-9][0-9]{0,4}(-[1-9][0-9]{0,4}){0,1}(,[1-9][0-9]{0,4}(-[1-9][0-9]{0,4}){0,1})*$"
        },
        "protocol" : {
          "type" : "string",
          "description" : "protocol of the rule"
        },
        "modifiable" : {
          "type" : "boolean",
          "description" : "flag for making the rule modifiable",
          "default" : false
        }
      }
    },
    "StackImageChangeRequest" : {
      "type" : "object",
      "required" : [ "imageId" ],
      "properties" : {
        "imageId" : {
          "type" : "string",
          "description" : "virtual machine image id from ImageCatalog, machines of the cluster will be started from this image",
          "minLength" : 1,
          "maxLength" : 2147483647
        },
        "imageCatalogName" : {
          "type" : "string",
          "description" : "custom image catalog URL"
        }
      }
    },
    "SharedServiceResponse" : {
      "type" : "object",
      "properties" : {
        "sharedClusterName" : {
          "type" : "string"
        },
        "sharedClusterId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "attachedClusters" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/AttachedClusterInfoResponse"
          }
        }
      }
    },
    "LDAPTestRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "validationRequest" : {
          "description" : "Request that contains the minimal set of fields to test LDAP connectivity",
          "$ref" : "#/definitions/LdapValidationRequest"
        }
      }
    },
    "WorkspaceResourceResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the workspace"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the workspace"
        }
      }
    },
    "GcpEncryption" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "encryption type for vm (DEFAULT|CUSTOM)"
        },
        "keyEncryptionMethod" : {
          "type" : "string",
          "description" : "encryption method for the key (RAW|RSA)"
        },
        "key" : {
          "type" : "string",
          "description" : "encryption key for vm"
        }
      }
    },
    "TemplateResponse" : {
      "type" : "object",
      "required" : [ "cloudPlatform", "name", "volumeCount", "volumeSize" ],
      "properties" : {
        "cloudPlatform" : {
          "type" : "string",
          "description" : "type of cloud provider"
        },
        "parameters" : {
          "type" : "object",
          "description" : "cloud specific parameters for template",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "secretParameters" : {
          "type" : "object",
          "description" : "cloud specific secret parameters for template",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "volumeType" : {
          "type" : "string",
          "description" : "type of the volumes"
        },
        "rootVolumeSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "size of the root volume"
        },
        "instanceType" : {
          "type" : "string",
          "description" : "type of the instance"
        },
        "customInstanceType" : {
          "description" : "custom instancetype definition",
          "$ref" : "#/definitions/CustomInstanceType"
        },
        "topologyId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the topology the resource belongs to"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "volumeCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of volumes"
        },
        "volumeSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "size of volumes"
        },
        "awsParameters" : {
          "description" : "aws specific parameters for template",
          "$ref" : "#/definitions/AwsParameters"
        },
        "gcpParameters" : {
          "description" : "gcp specific parameters for template",
          "$ref" : "#/definitions/GcpParameters"
        },
        "azureParameters" : {
          "description" : "azure specific parameters for template",
          "$ref" : "#/definitions/AzureParameters"
        },
        "openStackParameters" : {
          "description" : "openstack specific parameters for template",
          "$ref" : "#/definitions/OpenStackParameters"
        },
        "yarnParameters" : {
          "description" : "yarn specific parameters for template",
          "$ref" : "#/definitions/YarnParameters"
        },
        "public" : {
          "type" : "boolean",
          "description" : "resource is visible in account",
          "default" : false
        }
      }
    },
    "StructuredParametersQueryRequest" : {
      "type" : "object",
      "required" : [ "attachedCluster", "blueprintName", "clusterName", "fileSystemType", "storageName" ],
      "properties" : {
        "blueprintName" : {
          "type" : "string",
          "description" : "gathered from blueprintName field from the blueprint JSON"
        },
        "clusterName" : {
          "type" : "string",
          "description" : "name of the stack"
        },
        "accountName" : {
          "type" : "string",
          "description" : "Account name of the path"
        },
        "storageName" : {
          "type" : "string",
          "description" : "Storage name of the path"
        },
        "fileSystemType" : {
          "type" : "string",
          "description" : "Type of filesystem"
        },
        "attachedCluster" : {
          "type" : "boolean",
          "description" : "Attached cluster",
          "default" : false
        }
      }
    },
    "ImagesResponse" : {
      "type" : "object",
      "properties" : {
        "baseImages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BaseImageResponse"
          }
        },
        "hdpImages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ImageResponse"
          }
        },
        "hdfImages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ImageResponse"
          }
        },
        "supportedVersions" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "AutoscaleClusterResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "status" : {
          "type" : "string",
          "description" : "status of the cluster",
          "enum" : [ "REQUESTED", "CREATE_IN_PROGRESS", "AVAILABLE", "UPDATE_IN_PROGRESS", "UPDATE_REQUESTED", "UPDATE_FAILED", "CREATE_FAILED", "ENABLE_SECURITY_FAILED", "PRE_DELETE_IN_PROGRESS", "DELETE_IN_PROGRESS", "DELETE_FAILED", "DELETE_COMPLETED", "STOPPED", "STOP_REQUESTED", "START_REQUESTED", "STOP_IN_PROGRESS", "START_IN_PROGRESS", "START_FAILED", "STOP_FAILED", "WAIT_FOR_SYNC", "MAINTENANCE_MODE_ENABLED" ]
        },
        "hoursUp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "duration - how long the cluster is running in hours"
        },
        "minutesUp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "duration - how long the cluster is running in minutes (minus hours)"
        },
        "cluster" : {
          "type" : "string",
          "description" : "name of the cluster"
        },
        "blueprintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "blueprint id for the cluster"
        },
        "blueprint" : {
          "description" : "blueprint for the cluster",
          "$ref" : "#/definitions/BlueprintResponse"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource"
        },
        "statusReason" : {
          "type" : "string",
          "description" : "status message of the cluster"
        },
        "ambariServerIp" : {
          "type" : "string",
          "description" : "public ambari ip of the stack"
        },
        "ambariServerUrl" : {
          "type" : "string",
          "description" : "public ambari url"
        },
        "userName" : {
          "type" : "string",
          "description" : "ambari username"
        },
        "secure" : {
          "type" : "boolean",
          "description" : "tells wether the cluster is secured or not",
          "default" : false
        },
        "hostGroups" : {
          "type" : "array",
          "description" : "collection of hostgroups",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/HostGroupResponse"
          }
        },
        "rdsConfigIds" : {
          "type" : "array",
          "description" : "RDS configuration names for the cluster",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "rdsConfigs" : {
          "type" : "array",
          "description" : "RDS configurations for the cluster",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/RDSConfigResponse"
          }
        },
        "proxyName" : {
          "type" : "string",
          "description" : "proxy configuration name for the cluster"
        },
        "clusterExposedServicesForTopologies" : {
          "type" : "object",
          "description" : "cluster exposed services for topologies",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ClusterExposedServiceResponse"
            }
          }
        },
        "configStrategy" : {
          "type" : "string",
          "description" : "config recommendation strategy",
          "enum" : [ "NEVER_APPLY", "ONLY_STACK_DEFAULTS_APPLY", "ALWAYS_APPLY", "ALWAYS_APPLY_DONT_OVERRIDE_CUSTOM_VALUES" ]
        },
        "ldapConfigId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "LDAP config id for the cluster"
        },
        "ldapConfig" : {
          "description" : "LDAP config for the cluster",
          "$ref" : "#/definitions/LdapConfigResponse"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Additional information for ambari cluster",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "blueprintInputs" : {
          "type" : "array",
          "description" : "blueprint inputs in the cluster",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/BlueprintInput"
          }
        },
        "blueprintCustomProperties" : {
          "type" : "string",
          "description" : "blueprint custom properties"
        },
        "executorType" : {
          "type" : "string",
          "description" : "executor type of cluster",
          "enum" : [ "CONTAINER", "DEFAULT" ]
        },
        "gateway" : {
          "$ref" : "#/definitions/GatewayJson"
        },
        "customContainers" : {
          "description" : "custom containers",
          "$ref" : "#/definitions/CustomContainerResponse"
        },
        "ambariStackDetails" : {
          "description" : "details of the Ambari stack",
          "$ref" : "#/definitions/AmbariStackDetailsResponse"
        },
        "ambariRepoDetailsJson" : {
          "description" : "details of the Ambari package repository",
          "$ref" : "#/definitions/AmbariRepoDetails"
        },
        "ambariDatabaseDetails" : {
          "description" : "[DEPRECATED] use RdsConfig instead! details of the external Ambari database",
          "$ref" : "#/definitions/AmbariDatabaseDetails"
        },
        "customQueue" : {
          "type" : "string",
          "description" : "custom queue for yarn orchestrator"
        },
        "creationFinished" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Epoch time of cluster creation finish"
        },
        "kerberosResponse" : {
          "$ref" : "#/definitions/KerberosResponse"
        },
        "uptime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "duration - how long the cluster is running in milliseconds"
        },
        "extendedBlueprintText" : {
          "type" : "string",
          "description" : "ambari blueprint JSON, set this or the url field"
        },
        "sharedServiceResponse" : {
          "description" : "shared service for a specific stack",
          "$ref" : "#/definitions/SharedServiceResponse"
        },
        "fileSystemResponse" : {
          "description" : "filesystem for a specific stack",
          "$ref" : "#/definitions/FileSystemResponse"
        },
        "workspace" : {
          "description" : "workspace of the resource",
          "$ref" : "#/definitions/WorkspaceResourceResponse"
        },
        "password" : {
          "type" : "string",
          "description" : "ambari password"
        }
      }
    },
    "ClusterResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "status" : {
          "type" : "string",
          "description" : "status of the cluster",
          "enum" : [ "REQUESTED", "CREATE_IN_PROGRESS", "AVAILABLE", "UPDATE_IN_PROGRESS", "UPDATE_REQUESTED", "UPDATE_FAILED", "CREATE_FAILED", "ENABLE_SECURITY_FAILED", "PRE_DELETE_IN_PROGRESS", "DELETE_IN_PROGRESS", "DELETE_FAILED", "DELETE_COMPLETED", "STOPPED", "STOP_REQUESTED", "START_REQUESTED", "STOP_IN_PROGRESS", "START_IN_PROGRESS", "START_FAILED", "STOP_FAILED", "WAIT_FOR_SYNC", "MAINTENANCE_MODE_ENABLED" ]
        },
        "hoursUp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "duration - how long the cluster is running in hours"
        },
        "minutesUp" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "duration - how long the cluster is running in minutes (minus hours)"
        },
        "cluster" : {
          "type" : "string",
          "description" : "name of the cluster"
        },
        "blueprintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "blueprint id for the cluster"
        },
        "blueprint" : {
          "description" : "blueprint for the cluster",
          "$ref" : "#/definitions/BlueprintResponse"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource"
        },
        "statusReason" : {
          "type" : "string",
          "description" : "status message of the cluster"
        },
        "ambariServerIp" : {
          "type" : "string",
          "description" : "public ambari ip of the stack"
        },
        "ambariServerUrl" : {
          "type" : "string",
          "description" : "public ambari url"
        },
        "userName" : {
          "type" : "string",
          "description" : "ambari username"
        },
        "secure" : {
          "type" : "boolean",
          "description" : "tells wether the cluster is secured or not",
          "default" : false
        },
        "hostGroups" : {
          "type" : "array",
          "description" : "collection of hostgroups",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/HostGroupResponse"
          }
        },
        "rdsConfigIds" : {
          "type" : "array",
          "description" : "RDS configuration names for the cluster",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "rdsConfigs" : {
          "type" : "array",
          "description" : "RDS configurations for the cluster",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/RDSConfigResponse"
          }
        },
        "proxyName" : {
          "type" : "string",
          "description" : "proxy configuration name for the cluster"
        },
        "clusterExposedServicesForTopologies" : {
          "type" : "object",
          "description" : "cluster exposed services for topologies",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ClusterExposedServiceResponse"
            }
          }
        },
        "configStrategy" : {
          "type" : "string",
          "description" : "config recommendation strategy",
          "enum" : [ "NEVER_APPLY", "ONLY_STACK_DEFAULTS_APPLY", "ALWAYS_APPLY", "ALWAYS_APPLY_DONT_OVERRIDE_CUSTOM_VALUES" ]
        },
        "ldapConfigId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "LDAP config id for the cluster"
        },
        "ldapConfig" : {
          "description" : "LDAP config for the cluster",
          "$ref" : "#/definitions/LdapConfigResponse"
        },
        "attributes" : {
          "type" : "object",
          "description" : "Additional information for ambari cluster",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "blueprintInputs" : {
          "type" : "array",
          "description" : "blueprint inputs in the cluster",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/BlueprintInput"
          }
        },
        "blueprintCustomProperties" : {
          "type" : "string",
          "description" : "blueprint custom properties"
        },
        "executorType" : {
          "type" : "string",
          "description" : "executor type of cluster",
          "enum" : [ "CONTAINER", "DEFAULT" ]
        },
        "gateway" : {
          "$ref" : "#/definitions/GatewayJson"
        },
        "customContainers" : {
          "description" : "custom containers",
          "$ref" : "#/definitions/CustomContainerResponse"
        },
        "ambariStackDetails" : {
          "description" : "details of the Ambari stack",
          "$ref" : "#/definitions/AmbariStackDetailsResponse"
        },
        "ambariRepoDetailsJson" : {
          "description" : "details of the Ambari package repository",
          "$ref" : "#/definitions/AmbariRepoDetails"
        },
        "ambariDatabaseDetails" : {
          "description" : "[DEPRECATED] use RdsConfig instead! details of the external Ambari database",
          "$ref" : "#/definitions/AmbariDatabaseDetails"
        },
        "customQueue" : {
          "type" : "string",
          "description" : "custom queue for yarn orchestrator"
        },
        "creationFinished" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Epoch time of cluster creation finish"
        },
        "kerberosResponse" : {
          "$ref" : "#/definitions/KerberosResponse"
        },
        "uptime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "duration - how long the cluster is running in milliseconds"
        },
        "extendedBlueprintText" : {
          "type" : "string",
          "description" : "ambari blueprint JSON, set this or the url field"
        },
        "sharedServiceResponse" : {
          "description" : "shared service for a specific stack",
          "$ref" : "#/definitions/SharedServiceResponse"
        },
        "fileSystemResponse" : {
          "description" : "filesystem for a specific stack",
          "$ref" : "#/definitions/FileSystemResponse"
        },
        "workspace" : {
          "description" : "workspace of the resource",
          "$ref" : "#/definitions/WorkspaceResourceResponse"
        }
      }
    },
    "RestResponseDetails" : {
      "type" : "object",
      "properties" : {
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "statusText" : {
          "type" : "string"
        },
        "mediaType" : {
          "type" : "string"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "cookies" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "body" : {
          "type" : "string"
        }
      }
    },
    "PlatformOrchestratorsJson" : {
      "type" : "object",
      "properties" : {
        "orchestrators" : {
          "type" : "object",
          "description" : "orchestrators",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "defaults" : {
          "type" : "object",
          "description" : "default orchestrators",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "SupportedDatabaseEntryResponse" : {
      "type" : "object",
      "properties" : {
        "databaseName" : {
          "type" : "string",
          "description" : "Name of the database"
        },
        "displayName" : {
          "type" : "string",
          "description" : "Display name of the database"
        },
        "jdbcPrefix" : {
          "type" : "string",
          "description" : "Jdbc prefix of the database"
        },
        "versions" : {
          "type" : "array",
          "description" : "Supported version types currently only for Oracle",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "RecommendationResponse" : {
      "type" : "object",
      "properties" : {
        "recommendations" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VmTypeJson"
          }
        },
        "virtualMachines" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/VmTypeJson"
          }
        },
        "diskResponses" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/DiskResponse"
          }
        }
      }
    },
    "ChangeWorkspaceUsersJson" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "string"
        },
        "permissions" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "BlueprintRequest" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "ambariBlueprint" : {
          "type" : "string",
          "description" : "ambari blueprint JSON, set this or the url field"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        },
        "inputs" : {
          "type" : "array",
          "description" : "input parameters of the blueprint",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/BlueprintParameter"
          }
        },
        "tags" : {
          "type" : "object",
          "description" : "user defined tags for blueprint",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 1,
          "maxLength" : 100,
          "pattern" : "^[^;\\/%]*$"
        },
        "url" : {
          "type" : "string",
          "description" : "url source of an ambari blueprint, set this or the ambariBlueprint field"
        },
        "properties" : {
          "type" : "array",
          "description" : "properties to extend the blueprint with",
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "NetworkV2Request" : {
      "type" : "object",
      "properties" : {
        "subnetCIDR" : {
          "type" : "string",
          "description" : "the subnet definition of the network in CIDR format"
        },
        "parameters" : {
          "type" : "object",
          "description" : "provider specific parameters of the specified network",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "AmbariAddress" : {
      "type" : "object",
      "required" : [ "ambariAddress" ],
      "properties" : {
        "ambariAddress" : {
          "type" : "string",
          "description" : "ambari server address"
        }
      }
    },
    "SecurityRulesResponse" : {
      "type" : "object",
      "properties" : {
        "core" : {
          "type" : "array",
          "description" : "security rules for core type",
          "items" : {
            "$ref" : "#/definitions/SecurityRuleResponse"
          }
        },
        "gateway" : {
          "type" : "array",
          "description" : "security rules for gateway type",
          "items" : {
            "$ref" : "#/definitions/SecurityRuleResponse"
          }
        }
      }
    },
    "CloudStorageSupportedResponse" : {
      "type" : "object",
      "properties" : {
        "provider" : {
          "type" : "string"
        },
        "fileSystemType" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "AmbariV2Request" : {
      "type" : "object",
      "required" : [ "password", "userName" ],
      "properties" : {
        "blueprintId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "blueprint id for the cluster"
        },
        "blueprintName" : {
          "type" : "string",
          "description" : "blueprint name for the cluster"
        },
        "gateway" : {
          "$ref" : "#/definitions/GatewayJson"
        },
        "enableSecurity" : {
          "type" : "boolean",
          "description" : "enable Kerberos security",
          "default" : false
        },
        "userName" : {
          "type" : "string",
          "description" : "ambari username",
          "minLength" : 5,
          "maxLength" : 15,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "password" : {
          "type" : "string",
          "description" : "ambari password",
          "minLength" : 5,
          "maxLength" : 100
        },
        "kerberos" : {
          "$ref" : "#/definitions/KerberosRequest"
        },
        "validateBlueprint" : {
          "type" : "boolean",
          "description" : "blueprint validation",
          "default" : false
        },
        "validateRepositories" : {
          "type" : "boolean",
          "description" : "ambari and stack repository validation",
          "default" : false
        },
        "ambariStackDetails" : {
          "description" : "details of the Ambari stack",
          "$ref" : "#/definitions/AmbariStackDetails"
        },
        "ambariRepoDetailsJson" : {
          "description" : "details of the Ambari package repository",
          "$ref" : "#/definitions/AmbariRepoDetails"
        },
        "ambariDatabaseDetails" : {
          "description" : "[DEPRECATED] use RdsConfig instead! details of the external Ambari database",
          "$ref" : "#/definitions/AmbariDatabaseDetails"
        },
        "configStrategy" : {
          "type" : "string",
          "description" : "config recommendation strategy",
          "enum" : [ "NEVER_APPLY", "ONLY_STACK_DEFAULTS_APPLY", "ALWAYS_APPLY", "ALWAYS_APPLY_DONT_OVERRIDE_CUSTOM_VALUES" ]
        },
        "connectedCluster" : {
          "description" : "cluster can connect to a datalake you can define the parameters here",
          "$ref" : "#/definitions/ConnectedClusterRequest"
        },
        "ambariSecurityMasterKey" : {
          "type" : "string",
          "description" : "a master key for encrypting the passwords in Ambari",
          "minLength" : 5,
          "maxLength" : 100
        }
      }
    },
    "HostGroupRequest" : {
      "type" : "object",
      "required" : [ "constraint", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "constraint" : {
          "description" : "instance group or resource constraint for a hostgroup",
          "$ref" : "#/definitions/Constraint"
        },
        "recipeIds" : {
          "type" : "array",
          "description" : "referenced recipe ids",
          "uniqueItems" : true,
          "items" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "recoveryMode" : {
          "type" : "string",
          "description" : "recovery mode of the hostgroup's nodes",
          "enum" : [ "MANUAL", "AUTO" ]
        },
        "recipes" : {
          "type" : "array",
          "description" : "referenced recipes",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/RecipeRequest"
          }
        },
        "recipeNames" : {
          "type" : "array",
          "description" : "referenced recipe names",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "GcsCloudStorageParameters" : {
      "type" : "object",
      "required" : [ "serviceAccountEmail" ],
      "properties" : {
        "serviceAccountEmail" : {
          "type" : "string"
        }
      }
    },
    "UpdateStack" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "status of the scale request",
          "enum" : [ "SYNC", "FULL_SYNC", "REPAIR_FAILED_NODES", "STOPPED", "STARTED" ]
        },
        "withClusterEvent" : {
          "type" : "boolean",
          "description" : "on stack update, update cluster too",
          "default" : false
        },
        "instanceGroupAdjustment" : {
          "description" : "instance group adjustment",
          "$ref" : "#/definitions/InstanceGroupAdjustment"
        }
      }
    },
    "HostGroupAdjustment" : {
      "type" : "object",
      "required" : [ "hostGroup", "scalingAdjustment" ],
      "properties" : {
        "hostGroup" : {
          "type" : "string",
          "description" : "name of the host group"
        },
        "scalingAdjustment" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "scaling adjustment of the host groups"
        },
        "withStackUpdate" : {
          "type" : "boolean",
          "description" : "on cluster update, update stack too",
          "default" : false
        },
        "validateNodeCount" : {
          "type" : "boolean",
          "description" : "validate node count during downscale",
          "default" : false
        }
      }
    },
    "OperationDetails" : {
      "type" : "object",
      "properties" : {
        "eventType" : {
          "type" : "string",
          "enum" : [ "REST", "FLOW", "NOTIFICATION" ]
        },
        "resourceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "resourceName" : {
          "type" : "string"
        },
        "resourceType" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "userIdV3" : {
          "type" : "string"
        },
        "userNameV3" : {
          "type" : "string"
        },
        "account" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "cloudbreakId" : {
          "type" : "string"
        },
        "cloudbreakVersion" : {
          "type" : "string"
        },
        "workspaceId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "zonedDateTime" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "KerberosResponse" : {
      "type" : "object",
      "properties" : {
        "admin" : {
          "type" : "string",
          "description" : "kerberos admin user",
          "minLength" : 5,
          "maxLength" : 15
        },
        "url" : {
          "type" : "string",
          "description" : "kerberos KDC server URL"
        },
        "adminUrl" : {
          "type" : "string",
          "description" : "kerberos admin server URL"
        },
        "realm" : {
          "type" : "string"
        },
        "ldapUrl" : {
          "type" : "string"
        },
        "containerDn" : {
          "type" : "string"
        },
        "tcpAllowed" : {
          "type" : "boolean",
          "default" : false
        },
        "descriptor" : {
          "type" : "string"
        },
        "krb5Conf" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "CB_MANAGED", "EXISTING_AD", "EXISTING_MIT", "CUSTOM" ]
        }
      }
    },
    "TemplateV2Request" : {
      "type" : "object",
      "properties" : {
        "volumeCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "number of volumes"
        },
        "volumeSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "size of volumes"
        },
        "rootVolumeSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "size of the root volume"
        },
        "parameters" : {
          "type" : "object",
          "description" : "cloud specific parameters for template",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "awsParameters" : {
          "description" : "aws specific parameters for template",
          "$ref" : "#/definitions/AwsParameters"
        },
        "gcpParameters" : {
          "description" : "gcp specific parameters for template",
          "$ref" : "#/definitions/GcpParameters"
        },
        "azureParameters" : {
          "description" : "azure specific parameters for template",
          "$ref" : "#/definitions/AzureParameters"
        },
        "openStackParameters" : {
          "description" : "openstack specific parameters for template",
          "$ref" : "#/definitions/OpenStackParameters"
        },
        "yarnParameters" : {
          "description" : "yarn specific parameters for template",
          "$ref" : "#/definitions/YarnParameters"
        },
        "volumeType" : {
          "type" : "string",
          "description" : "type of the volumes"
        },
        "instanceType" : {
          "type" : "string",
          "description" : "type of the instance"
        },
        "customInstanceType" : {
          "description" : "custom instancetype definition",
          "$ref" : "#/definitions/CustomInstanceType"
        }
      }
    },
    "RepoConfigValidationRequest" : {
      "type" : "object",
      "properties" : {
        "ambariBaseUrl" : {
          "type" : "string",
          "description" : "url of the Ambari repository"
        },
        "ambariGpgKeyUrl" : {
          "type" : "string",
          "description" : "gpg key of the Ambari repository"
        },
        "stackBaseURL" : {
          "type" : "string",
          "description" : "url of the stack repository"
        },
        "utilsBaseURL" : {
          "type" : "string",
          "description" : "url of the stack utils repository"
        },
        "versionDefinitionFileUrl" : {
          "type" : "string",
          "description" : "local path on the Ambari server or URL that point to the desired VDF file"
        },
        "mpackUrl" : {
          "type" : "string",
          "description" : "url the MPACK that needs to be installed before HDF installation"
        }
      }
    },
    "StackAuthenticationResponse" : {
      "type" : "object",
      "properties" : {
        "publicKey" : {
          "type" : "string",
          "description" : "public key for accessing instances"
        },
        "publicKeyId" : {
          "type" : "string",
          "description" : "public key id for accessing instances"
        },
        "loginUserName" : {
          "type" : "string",
          "description" : "authentication name for machines"
        }
      }
    },
    "AdlsCloudStorageParameters" : {
      "type" : "object",
      "required" : [ "accountName", "clientId", "credential" ],
      "properties" : {
        "accountName" : {
          "type" : "string"
        },
        "clientId" : {
          "type" : "string"
        },
        "credential" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "WorkspaceRequest" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "description" : {
          "type" : "string",
          "description" : "description of the resource",
          "minLength" : 0,
          "maxLength" : 1000
        }
      }
    },
    "GatewayTopologyJson" : {
      "type" : "object",
      "properties" : {
        "topologyName" : {
          "type" : "string",
          "description" : "Knox topology name"
        },
        "exposedServices" : {
          "type" : "array",
          "description" : "exposed Knox services - those services that should be accessible through Knox gateway.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PlatformEncryptionKeysResponse" : {
      "type" : "object",
      "properties" : {
        "encryptionKeyConfigs" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/EncryptionKeyConfigJson"
          }
        }
      }
    },
    "ImageCatalogRequest" : {
      "type" : "object",
      "required" : [ "name", "url" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "url" : {
          "type" : "string",
          "description" : "custom image catalog's URL",
          "pattern" : "^http[s]?://.*"
        }
      }
    },
    "InstanceGroupDetails" : {
      "type" : "object",
      "properties" : {
        "groupName" : {
          "type" : "string"
        },
        "groupType" : {
          "type" : "string"
        },
        "nodeCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "instanceType" : {
          "type" : "string"
        },
        "volumeType" : {
          "type" : "string"
        },
        "volumeSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "volumeCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "securityGroup" : {
          "$ref" : "#/definitions/SecurityGroupDetails"
        }
      }
    },
    "PlatformAccessConfigsResponse" : {
      "type" : "object",
      "properties" : {
        "accessConfigs" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/AccessConfigJson"
          }
        }
      }
    },
    "SecurityGroupDetails" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "securityGroupId" : {
          "type" : "string"
        },
        "securityGroupIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "securityRules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SecurityRuleDetails"
          }
        }
      }
    },
    "BaseImageResponse" : {
      "type" : "object",
      "properties" : {
        "hdpStacks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StackDetailsJson"
          }
        },
        "hdfStacks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StackDetailsJson"
          }
        },
        "date" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "os" : {
          "type" : "string"
        },
        "osType" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "repo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "images" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "stackDetails" : {
          "$ref" : "#/definitions/StackDetailsJson"
        },
        "defaultImage" : {
          "type" : "boolean",
          "default" : false
        },
        "packageVersions" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AccessConfigJson" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "PlatformResourceRequestJson" : {
      "type" : "object",
      "properties" : {
        "credentialId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "credential resource id for the request"
        },
        "credentialName" : {
          "type" : "string",
          "description" : "credential resource name for the request"
        },
        "region" : {
          "type" : "string",
          "description" : "Related region"
        },
        "platformVariant" : {
          "type" : "string",
          "description" : "cloud provider api variant"
        },
        "filters" : {
          "type" : "object",
          "description" : "filter for resources",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "availabilityZone" : {
          "type" : "string",
          "description" : "related availability zone"
        }
      }
    },
    "InstanceGroupAdjustment" : {
      "type" : "object",
      "required" : [ "instanceGroup", "scalingAdjustment" ],
      "properties" : {
        "instanceGroup" : {
          "type" : "string",
          "description" : "name of the instance group"
        },
        "scalingAdjustment" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "scaling adjustment of the instance groups"
        }
      }
    },
    "CredentialSourceRequest" : {
      "type" : "object",
      "required" : [ "sourceId", "sourceName" ],
      "properties" : {
        "sourceName" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "sourceId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "parameters" : {
          "type" : "object",
          "description" : "cloud specific parameters for credential",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "RDSConfigResponse" : {
      "type" : "object",
      "required" : [ "connectionDriver", "connectionURL", "databaseEngine", "databaseEngineDisplayName", "name", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the RDS configuration resource"
        },
        "connectionURL" : {
          "type" : "string",
          "description" : "JDBC connection URL in the form of jdbc:<db-type>://<address>:<port>/<db>"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of RDS, aka the service name that will use the RDS like HIVE, DRUID, SUPERSET, RANGER, etc."
        },
        "connectorJarUrl" : {
          "type" : "string",
          "description" : "URL that points to the jar of the connection driver(connector)"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "creationDate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "creation time of the resource in long"
        },
        "publicInAccount" : {
          "type" : "boolean",
          "description" : "resource is visible in account",
          "default" : false
        },
        "clusterNames" : {
          "type" : "array",
          "description" : "list of clusters which use config",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "stackVersion" : {
          "type" : "string",
          "description" : "(HDP, HDF)Stack version for the RDS configuration"
        },
        "databaseEngine" : {
          "type" : "string",
          "description" : "Name of the external database engine (MYSQL, POSTGRES...)"
        },
        "connectionDriver" : {
          "type" : "string",
          "description" : "Name of the JDBC connection driver (for example: 'org.postgresql.Driver')"
        },
        "databaseEngineDisplayName" : {
          "type" : "string",
          "description" : "Display name of the external database engine (Mysql, PostgreSQL...)"
        },
        "workspace" : {
          "description" : "workspace of the resource",
          "$ref" : "#/definitions/WorkspaceResourceResponse"
        }
      }
    },
    "PlatformDisksJson" : {
      "type" : "object",
      "properties" : {
        "diskTypes" : {
          "type" : "object",
          "description" : "disk types",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "defaultDisks" : {
          "type" : "object",
          "description" : "default disks",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "diskMappings" : {
          "type" : "object",
          "description" : "disk mappings",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "displayNames" : {
          "type" : "object",
          "description" : "disk displayNames",
          "additionalProperties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "CustomDomainSettings" : {
      "type" : "object",
      "properties" : {
        "customDomain" : {
          "type" : "string",
          "description" : "custom domain name for the nodes in the stack"
        },
        "customHostname" : {
          "type" : "string",
          "description" : "custom hostname for nodes in the stack"
        },
        "clusterNameAsSubdomain" : {
          "type" : "boolean",
          "description" : "using the cluster name to create subdomain",
          "default" : false
        },
        "hostgroupNameAsHostname" : {
          "type" : "boolean",
          "description" : "using the hostgroup names to create hostnames",
          "default" : false
        }
      }
    },
    "StructuredParameterQueriesResponse" : {
      "type" : "object",
      "required" : [ "entries" ],
      "properties" : {
        "entries" : {
          "type" : "array",
          "description" : "Entries parameters as a json",
          "items" : {
            "$ref" : "#/definitions/StructuredParameterQueryResponse"
          }
        }
      }
    },
    "GcpParameters" : {
      "type" : "object",
      "properties" : {
        "encryption" : {
          "description" : "encryption for vm",
          "$ref" : "#/definitions/GcpEncryption"
        }
      }
    },
    "FailureReport" : {
      "type" : "object",
      "required" : [ "failedNodes" ],
      "properties" : {
        "failedNodes" : {
          "type" : "array",
          "description" : "List of failed nodes",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "StackAuthentication" : {
      "type" : "object",
      "properties" : {
        "publicKey" : {
          "type" : "string",
          "description" : "public key for accessing instances"
        },
        "publicKeyId" : {
          "type" : "string",
          "description" : "public key id for accessing instances"
        },
        "loginUserName" : {
          "type" : "string",
          "description" : "authentication name for machines"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "username" : {
          "type" : "string"
        }
      }
    },
    "SecurityRuleResponse" : {
      "type" : "object",
      "required" : [ "ports", "protocol", "subnet" ],
      "properties" : {
        "subnet" : {
          "type" : "string",
          "description" : "definition of allowed subnet in CIDR format"
        },
        "ports" : {
          "type" : "string",
          "description" : "comma separated list of accessible ports",
          "pattern" : "^[1-9][0-9]{0,4}(-[1-9][0-9]{0,4}){0,1}(,[1-9][0-9]{0,4}(-[1-9][0-9]{0,4}){0,1})*$"
        },
        "protocol" : {
          "type" : "string",
          "description" : "protocol of the rule"
        },
        "modifiable" : {
          "type" : "boolean",
          "description" : "flag for making the rule modifiable",
          "default" : false
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        }
      }
    },
    "MaintenanceModeJson" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "maintenance mode status",
          "enum" : [ "ENABLED", "VALIDATION_REQUESTED", "DISABLED" ]
        }
      }
    },
    "SmartSenseSubscriptionJson" : {
      "type" : "object",
      "required" : [ "subscriptionId" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource",
          "readOnly" : true
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "Identifier of SmartSense subscription.",
          "pattern" : "^([a-zA-Z]{1}-[0-9]{8}-[a-zA-Z]{1}-[0-9]{8}$)"
        },
        "owner" : {
          "type" : "string",
          "description" : "id of the resource owner that is provided by OAuth provider",
          "readOnly" : true
        },
        "account" : {
          "type" : "string",
          "description" : "account id of the resource owner that is provided by OAuth provider",
          "readOnly" : true
        },
        "publicInAccount" : {
          "type" : "boolean",
          "description" : "resource is visible in account",
          "readOnly" : true,
          "default" : false
        },
        "autoGenerated" : {
          "type" : "boolean",
          "description" : "Flag of aut generated SmartSense subscription.",
          "default" : false
        }
      }
    },
    "RdsTestResult" : {
      "type" : "object",
      "required" : [ "connectionResult" ],
      "properties" : {
        "connectionResult" : {
          "type" : "string",
          "description" : "result of RDS connection test"
        }
      }
    },
    "ImageCatalogResponse" : {
      "type" : "object",
      "required" : [ "id", "name", "publicInAccount", "url", "usedAsDefault" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "url" : {
          "type" : "string",
          "description" : "custom image catalog's URL",
          "pattern" : "^http[s]?://.*"
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        },
        "publicInAccount" : {
          "type" : "boolean",
          "description" : "resource is visible in account",
          "default" : false
        },
        "usedAsDefault" : {
          "type" : "boolean",
          "description" : "true if image catalog is the default one",
          "default" : false
        },
        "imagesResponse" : {
          "description" : "image response in imagecatalog",
          "$ref" : "#/definitions/ImagesResponse"
        },
        "workspace" : {
          "description" : "workspace of the resource",
          "$ref" : "#/definitions/WorkspaceResourceResponse"
        }
      }
    },
    "FileSystemResponse" : {
      "type" : "object",
      "required" : [ "id", "name", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the filesystem"
        },
        "type" : {
          "type" : "string",
          "description" : "type of the filesystem"
        },
        "defaultFs" : {
          "type" : "boolean",
          "description" : "true if fs.defaultFS should point to this filesystem",
          "default" : false
        },
        "adls" : {
          "$ref" : "#/definitions/AdlsCloudStorageParameters"
        },
        "wasb" : {
          "$ref" : "#/definitions/WasbCloudStorageParameters"
        },
        "gcs" : {
          "$ref" : "#/definitions/GcsCloudStorageParameters"
        },
        "s3" : {
          "$ref" : "#/definitions/S3CloudStorageParameters"
        },
        "adlsGen2" : {
          "$ref" : "#/definitions/AdlsGen2CloudStorageParameters"
        },
        "locations" : {
          "type" : "array",
          "description" : "configuration of the filesystem location",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/StorageLocationResponse"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource"
        }
      }
    },
    "StackV2Request" : {
      "type" : "object",
      "required" : [ "general", "instanceGroups" ],
      "properties" : {
        "general" : {
          "description" : "general configuration parameters for a cluster (e.g. 'name', 'credentialname')",
          "$ref" : "#/definitions/GeneralSettings"
        },
        "placement" : {
          "description" : "placement configuration parameters for a cluster (e.g. 'region', 'availabilityZone')",
          "$ref" : "#/definitions/PlacementSettings"
        },
        "platformVariant" : {
          "type" : "string",
          "description" : "cloud provider api variant"
        },
        "ambariVersion" : {
          "type" : "string",
          "description" : "specific version of ambari"
        },
        "hdpVersion" : {
          "type" : "string",
          "description" : "specific version of HDP"
        },
        "parameters" : {
          "type" : "object",
          "description" : "additional cloud specific parameters for stack",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "inputs" : {
          "type" : "object",
          "description" : "dynamic properties",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "customDomain" : {
          "description" : "settings related to custom domain names",
          "$ref" : "#/definitions/CustomDomainSettings"
        },
        "tags" : {
          "description" : "stack related tags",
          "$ref" : "#/definitions/Tags"
        },
        "instanceGroups" : {
          "type" : "array",
          "description" : "collection of instance groupst",
          "items" : {
            "$ref" : "#/definitions/instanceGroupsV2"
          }
        },
        "failurePolicy" : {
          "description" : "failure policy in case of failures",
          "$ref" : "#/definitions/FailurePolicyRequest"
        },
        "stackAuthentication" : {
          "description" : "stack related authentication",
          "$ref" : "#/definitions/StackAuthentication"
        },
        "network" : {
          "description" : "stack related network",
          "$ref" : "#/definitions/NetworkV2Request"
        },
        "imageSettings" : {
          "description" : "settings for custom images",
          "$ref" : "#/definitions/ImageSettings"
        },
        "flexId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the related flex subscription"
        },
        "cluster" : {
          "description" : "cluster request object on stack",
          "$ref" : "#/definitions/ClusterV2Request"
        },
        "gatewayPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "port of the gateway secured proxy",
          "minimum" : 1025.0,
          "maximum" : 65535.0
        }
      }
    },
    "SubscriptionRequest" : {
      "type" : "object",
      "required" : [ "endpointUrl" ],
      "properties" : {
        "endpointUrl" : {
          "type" : "string",
          "description" : "url of the endpoint",
          "pattern" : "^(https?:\\/\\/)((([\\da-z\\.-]+)\\.([a-z]{2,6}))|localhost|[1-9][0-9]{0,2}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3})(:[1-9][0-9]{1,4})?\\/([\\/\\w\\.-]*)\\/?$"
        }
      }
    },
    "ImageJson" : {
      "type" : "object",
      "properties" : {
        "imageName" : {
          "type" : "string",
          "description" : "name of the image"
        },
        "imageCatalogUrl" : {
          "type" : "string",
          "description" : "url of the image catalog"
        },
        "imageId" : {
          "type" : "string",
          "description" : "id of the image"
        },
        "imageCatalogName" : {
          "type" : "string",
          "description" : "name of the image catalog"
        }
      }
    },
    "PlatformGatewaysResponse" : {
      "type" : "object",
      "properties" : {
        "gateways" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/CloudGatewayJson"
            }
          }
        }
      }
    },
    "AuditEvent" : {
      "type" : "object",
      "properties" : {
        "auditId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "rawRestEvent" : {
          "$ref" : "#/definitions/StructuredRestCallEvent"
        },
        "rawFlowEvent" : {
          "$ref" : "#/definitions/StructuredFlowEvent"
        },
        "rawNotification" : {
          "$ref" : "#/definitions/StructuredNotificationEvent"
        },
        "operation" : {
          "$ref" : "#/definitions/OperationDetails"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int64"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "FlexSubscriptionResponse" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "Identifier of Flex subscription.",
          "readOnly" : true,
          "pattern" : "^(FLEX-[0-9]{10}$)"
        },
        "smartSenseSubscriptionId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Identifier of SmartSense subscription Cloudbreak domain object json representation.",
          "readOnly" : true
        },
        "usedAsDefault" : {
          "type" : "boolean",
          "description" : "true if the flex subscription is the default one",
          "default" : false
        },
        "usedForController" : {
          "type" : "boolean",
          "description" : "true if the flex subscription was used for the controller",
          "default" : false
        },
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the resource",
          "readOnly" : true
        },
        "owner" : {
          "type" : "string",
          "description" : "id of the resource owner that is provided by OAuth provider",
          "readOnly" : true
        },
        "account" : {
          "type" : "string",
          "description" : "account id of the resource owner that is provided by OAuth provider",
          "readOnly" : true
        },
        "publicInAccount" : {
          "type" : "boolean",
          "description" : "resource is visible in account",
          "readOnly" : true,
          "default" : false
        },
        "smartSenseSubscription" : {
          "description" : "The associated SmartSense subscription Cloudbreak domain object json representation.",
          "readOnly" : true,
          "$ref" : "#/definitions/SmartSenseSubscriptionJson"
        }
      }
    },
    "ManagementPackDetails" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "name of the resource",
          "minLength" : 5,
          "maxLength" : 100,
          "pattern" : "(^[a-z][-a-z0-9]*[a-z0-9]$)"
        },
        "preInstalled" : {
          "type" : "boolean",
          "description" : "Denotes that the image is prewarmed or base image.",
          "default" : false
        }
      }
    },
    "RestRequestDetails" : {
      "type" : "object",
      "properties" : {
        "requestUri" : {
          "type" : "string"
        },
        "mediaType" : {
          "type" : "string"
        },
        "method" : {
          "type" : "string"
        },
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "cookies" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "body" : {
          "type" : "string"
        }
      }
    },
    "KerberosRequest" : {
      "type" : "object",
      "properties" : {
        "admin" : {
          "type" : "string",
          "description" : "kerberos admin user",
          "minLength" : 5,
          "maxLength" : 15
        },
        "url" : {
          "type" : "string",
          "description" : "kerberos KDC server URL"
        },
        "adminUrl" : {
          "type" : "string",
          "description" : "kerberos admin server URL"
        },
        "realm" : {
          "type" : "string"
        },
        "ldapUrl" : {
          "type" : "string"
        },
        "containerDn" : {
          "type" : "string"
        },
        "tcpAllowed" : {
          "type" : "boolean",
          "default" : false
        },
        "descriptor" : {
          "type" : "string"
        },
        "krb5Conf" : {
          "type" : "string"
        },
        "masterKey" : {
          "type" : "string",
          "description" : "kerberos master key",
          "minLength" : 3,
          "maxLength" : 50
        },
        "password" : {
          "type" : "string",
          "description" : "kerberos admin password",
          "minLength" : 5,
          "maxLength" : 50
        },
        "principal" : {
          "type" : "string",
          "description" : "kerberos principal"
        }
      }
    },
    "FlowDetails" : {
      "type" : "object",
      "properties" : {
        "flowChainType" : {
          "type" : "string"
        },
        "flowType" : {
          "type" : "string"
        },
        "flowChainId" : {
          "type" : "string"
        },
        "flowId" : {
          "type" : "string"
        },
        "flowState" : {
          "type" : "string"
        },
        "nextFlowState" : {
          "type" : "string"
        },
        "flowEvent" : {
          "type" : "string"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    }
  }
}